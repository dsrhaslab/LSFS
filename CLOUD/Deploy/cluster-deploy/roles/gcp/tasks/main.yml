- name: Create a disk
  gcp_compute_disk:
    name: "{{ item.name }}"
    size_gb: "{{ item.disk_size }}"
    source_image: "{{ source_image }}"
    zone: "{{ gcp_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: disk
  loop: "{{ disks }}"

- name: Create a network
  gcp_compute_network:
    name: "lsfs-network"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: network

- name: Create an address
  gcp_compute_address:
    name: "{{ item }}"
    region: "{{ gcp_region }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: address
  loop: "{{ addresses }}"

- name: Internal/external firewall rules
  gcp_compute_firewall:
    name: "internal-external-rules"
    allowed:
      - ip_protocol: tcp
        ports:
          - 22
          - 80
      - ip_protocol: icmp
    network: 
      selfLink: "global/networks/{{ network.name }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present

- name: Internal firewall rules
  gcp_compute_firewall:
    name: "internal-rules"
    allowed:
      - ip_protocol: tcp
        ports:
          - 3306
          - 5000
          - 9200
          - 9300
          - 6443
      - ip_protocol: 112
      - ip_protocol: udp
    source_ranges:
      - 10.128.0.0/9
    network: 
      selfLink: "global/networks/{{ network.name }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present

- name: Create an instance
  gcp_compute_instance:
    name: "instance-{{ '%02d' | format(item.index) }}"
    machine_type: "{{ item.gcp_machine_type }}"
    can_ip_forward: true
    service_accounts:
      - scopes: 
         - "{{ gcp_account_scope }}"
        email: "{{ gcp_account_email }}"
    disks:
      - auto_delete: true
        boot: true
        source: "{{ disk.results[item.index - 1] }}"
    metadata:
      startup-script: |
        #!/bin/bash
        ls
    tags:
      items: "{{ item.tags }}"
    network_interfaces:
      - network: "{{ network }}"
        access_configs:
        - name: External NAT
          nat_ip: "{{ address.results[item.index - 1] }}"
          type: ONE_TO_ONE_NAT
    scheduling:
      preemptible: no
    zone: "{{ gcp_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: instance
  loop: "{{ instances }}"

- name: Add hosts to in memory inventory
  add_host:
    name: "{{ item.networkInterfaces[0].accessConfigs[0].natIP }}"
    groups: "{{ item.tags['items'] | join(',') }}"
  loop: "{{ instance.results }}"
  
- name: Wait for instances to respond
  wait_for:
    host: "{{ item }}"
    port: 22
  loop: "{{ groups['all'] }}"
