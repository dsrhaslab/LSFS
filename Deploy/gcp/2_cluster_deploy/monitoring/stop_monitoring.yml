# Play - Run workload
  - name: Stop dstat in all pods
    hosts: masters

    tasks:

      - name: Stop dstat in all peers
        shell: | 
                kubectl exec -n lsfs peer{{ item }} -- bash /{{ container_com_directory }}/dstat/stop_dstat.sh &> /dev/null
        with_items:
          - "{{ range(1, nr_peers | int + 1) | list }}"
        when: dstat_peer_config is defined


      - name: Stop dstat in clients
        shell: | 
                kubectl exec -n lsfs client1 -- bash /{{ container_com_directory }}/dstat/stop_dstat.sh &> /dev/null
        when: dstat_client_config is defined

  # Play - Stop nvidia stat process
  - name: Stop stat gpu in client
    hosts: clients

    tasks:

      - name: Get running processes list from remote host
        ignore_errors: yes
        shell: pgrep -f "nvidia-smi"
        register: running_processes

      - name: Kill running processes
        ignore_errors: yes
        shell: "kill {{ item }}"
        with_items: "{{ running_processes.stdout_lines }}"


  # Play - Collecting dstat output
  - name: Collenting dstat output from peers
    hosts: peers
    become: yes

    tasks:

        - name: Copy peers dstat output to local
          fetch:
            src: /home/{{ ansible_user }}/{{ remote_com_directory }}/metrics/run-{{ wl_name }}-lsfs-peer{{ item }}.dstat.csv
            dest: ../{{ dstat_path }}/
            flat: yes
            fail_on_missing: no
          with_items:
            - "{{ range(1, nr_peers | int + 1) | list }}"
          when: dstat_peer_config is defined


    # Play - Collecting dstat output
  - name: Collenting dstat output from client
    hosts: clients
    become: yes

    tasks:

        - name: Copy client dstat output to local
          fetch:
            src: /home/{{ ansible_user }}/{{ remote_com_directory }}/metrics/run-{{ wl_name }}-lsfs-client1.dstat.csv
            dest: ../{{ dstat_path }}/
            flat: yes
            fail_on_missing: no
          when: dstat_client_config is defined
        
        - name: Copy client gpu stat output to local
          fetch:
            src: /home/{{ ansible_user }}/{{ remote_com_directory }}/metrics/nvidia-smi*
            dest: ../{{ gpu_stat_path }}/
            flat: yes
            fail_on_missing: no
          when: stat_client_gpu is defined