2023-01-02 17:37:30.987944: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-02 17:37:32.988176: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64:/usr/local/nccl2/lib:/usr/local/cuda/extras/CUPTI/lib64
2023-01-02 17:37:32.988312: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64:/usr/local/nccl2/lib:/usr/local/cuda/extras/CUPTI/lib64
2023-01-02 17:37:32.988329: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-02 17:37:34.873304: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:37:34.903032: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:37:34.905750: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:37:34.909200: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-02 17:37:34.909711: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:37:34.912360: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:37:34.915056: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:37:36.625018: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:37:36.627146: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:37:36.629011: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:37:36.630787: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 13582 MB memory:  -> device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5
INFO:tensorflow:Using MirroredStrategy with devices ('/job:localhost/replica:0/task:0/device:GPU:0',)
I0102 17:37:36.965889 139857235859264 mirrored_strategy.py:374] Using MirroredStrategy with devices ('/job:localhost/replica:0/task:0/device:GPU:0',)
WARNING:tensorflow:From /opt/conda/lib/python3.7/site-packages/tensorflow/python/autograph/pyct/static_analysis/liveness.py:83: Analyzer.lamba_check (from tensorflow.python.autograph.pyct.static_analysis.liveness) is deprecated and will be removed after 2023-09-23.
Instructions for updating:
Lambda fuctions will be no more assumed to be used in the statement where they are used, or at least in the same block. https://github.com/tensorflow/tensorflow/issues/56089
W0102 17:37:37.009185 139857235859264 deprecation.py:356] From /opt/conda/lib/python3.7/site-packages/tensorflow/python/autograph/pyct/static_analysis/liveness.py:83: Analyzer.lamba_check (from tensorflow.python.autograph.pyct.static_analysis.liveness) is deprecated and will be removed after 2023-09-23.
Instructions for updating:
Lambda fuctions will be no more assumed to be used in the statement where they are used, or at least in the same block. https://github.com/tensorflow/tensorflow/issues/56089
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:37:37.837771 139857235859264 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:37:37.840690 139857235859264 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:37:37.842986 139857235859264 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:37:37.843965 139857235859264 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:37:38.153038 139857235859264 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:37:38.155076 139857235859264 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:37:38.156958 139857235859264 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:37:38.160236 139857235859264 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:37:38.162194 139857235859264 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:37:39.312448 139857235859264 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
2023-01-02 17:37:45.955565: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8200
I0102 17:37:54.561356 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':100, 'time_taken': 16.576365,'examples_per_second': 386.091873}
I0102 17:38:00.900815 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':200, 'time_taken': 6.339564,'examples_per_second': 1009.533210}
I0102 17:38:08.124080 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':300, 'time_taken': 7.223266,'examples_per_second': 886.025750}
I0102 17:38:14.569488 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':400, 'time_taken': 6.445407,'examples_per_second': 992.955152}
I0102 17:38:21.001439 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':500, 'time_taken': 6.431928,'examples_per_second': 995.036027}
I0102 17:38:27.401497 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':600, 'time_taken': 6.400078,'examples_per_second': 999.987804}
I0102 17:38:33.931893 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':700, 'time_taken': 6.530396,'examples_per_second': 980.032454}
I0102 17:38:40.507166 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':800, 'time_taken': 6.575274,'examples_per_second': 973.343470}
I0102 17:38:46.841550 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':900, 'time_taken': 6.334388,'examples_per_second': 1010.358100}
I0102 17:38:53.232990 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':1000, 'time_taken': 6.391440,'examples_per_second': 1001.339342}
I0102 17:38:59.614941 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':1100, 'time_taken': 6.381950,'examples_per_second': 1002.828305}
I0102 17:39:06.746107 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':1200, 'time_taken': 7.131143,'examples_per_second': 897.471794}
I0102 17:39:13.031128 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':1300, 'time_taken': 6.285047,'examples_per_second': 1018.289949}
I0102 17:39:19.327950 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':1400, 'time_taken': 6.296818,'examples_per_second': 1016.386369}
I0102 17:39:25.696022 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':1500, 'time_taken': 6.368073,'examples_per_second': 1005.013644}
I0102 17:39:32.091286 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':1600, 'time_taken': 6.395251,'examples_per_second': 1000.742614}
I0102 17:39:38.496227 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':1700, 'time_taken': 6.404951,'examples_per_second': 999.226952}
I0102 17:39:44.853502 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':1800, 'time_taken': 6.357277,'examples_per_second': 1006.720268}
I0102 17:39:51.319859 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':1900, 'time_taken': 6.466348,'examples_per_second': 989.739468}
I0102 17:39:57.635770 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':2000, 'time_taken': 6.315920,'examples_per_second': 1013.312450}
I0102 17:40:04.824206 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':2100, 'time_taken': 7.188436,'examples_per_second': 890.318895}
I0102 17:40:11.122150 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':2200, 'time_taken': 6.297945,'examples_per_second': 1016.204450}
I0102 17:40:17.394741 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':2300, 'time_taken': 6.272567,'examples_per_second': 1020.315881}
I0102 17:40:23.775545 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':2400, 'time_taken': 6.380826,'examples_per_second': 1003.004941}
I0102 17:40:30.223934 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':2500, 'time_taken': 6.448384,'examples_per_second': 992.496681}
I0102 17:40:36.610723 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':2600, 'time_taken': 6.386793,'examples_per_second': 1002.067877}
I0102 17:40:43.015364 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':2700, 'time_taken': 6.404642,'examples_per_second': 999.275271}
I0102 17:40:49.433784 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':2800, 'time_taken': 6.418422,'examples_per_second': 997.129790}
I0102 17:40:55.866282 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':2900, 'time_taken': 6.432501,'examples_per_second': 994.947439}
I0102 17:41:02.329680 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':3000, 'time_taken': 6.463396,'examples_per_second': 990.191523}
I0102 17:41:09.511492 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':3100, 'time_taken': 7.181808,'examples_per_second': 891.140445}
I0102 17:41:15.700601 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':3200, 'time_taken': 6.189102,'examples_per_second': 1034.075634}
I0102 17:41:22.055333 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':3300, 'time_taken': 6.354742,'examples_per_second': 1007.121918}
I0102 17:41:28.290049 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':3400, 'time_taken': 6.234688,'examples_per_second': 1026.514911}
I0102 17:41:34.671100 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':3500, 'time_taken': 6.381069,'examples_per_second': 1002.966715}
I0102 17:41:40.981521 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':3600, 'time_taken': 6.310427,'examples_per_second': 1014.194452}
I0102 17:41:47.490328 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':3700, 'time_taken': 6.508777,'examples_per_second': 983.287586}
I0102 17:41:53.879173 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':3800, 'time_taken': 6.388877,'examples_per_second': 1001.741008}
I0102 17:42:00.331958 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':3900, 'time_taken': 6.452751,'examples_per_second': 991.825086}
I0102 17:42:07.785200 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':4000, 'time_taken': 7.453280,'examples_per_second': 858.682383}
I0102 17:42:14.220148 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':4100, 'time_taken': 6.434943,'examples_per_second': 994.569737}
I0102 17:42:20.586880 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':4200, 'time_taken': 6.366721,'examples_per_second': 1005.226962}
I0102 17:42:26.999064 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':4300, 'time_taken': 6.412183,'examples_per_second': 998.100016}
I0102 17:42:33.342365 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':4400, 'time_taken': 6.343313,'examples_per_second': 1008.936463}
I0102 17:42:39.652682 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':4500, 'time_taken': 6.310314,'examples_per_second': 1014.212576}
I0102 17:42:46.110267 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':4600, 'time_taken': 6.457587,'examples_per_second': 991.082345}
I0102 17:42:52.563369 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':4700, 'time_taken': 6.453105,'examples_per_second': 991.770632}
I0102 17:42:58.721945 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':4800, 'time_taken': 6.158576,'examples_per_second': 1039.201228}
I0102 17:43:05.933000 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':4900, 'time_taken': 7.211056,'examples_per_second': 887.526015}
I0102 17:43:12.395829 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':5000, 'time_taken': 6.462817,'examples_per_second': 990.280252}
I0102 17:43:18.843026 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':5100, 'time_taken': 6.447210,'examples_per_second': 992.677441}
I0102 17:43:25.225834 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':5200, 'time_taken': 6.382803,'examples_per_second': 1002.694202}
I0102 17:43:31.632768 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':5300, 'time_taken': 6.406934,'examples_per_second': 998.917769}
I0102 17:43:38.046308 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':5400, 'time_taken': 6.413541,'examples_per_second': 997.888711}
I0102 17:43:44.254535 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':5500, 'time_taken': 6.208229,'examples_per_second': 1030.889876}
I0102 17:43:50.651897 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':5600, 'time_taken': 6.397345,'examples_per_second': 1000.414968}
I0102 17:43:56.965154 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':5700, 'time_taken': 6.313274,'examples_per_second': 1013.737026}
I0102 17:44:03.810180 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':5800, 'time_taken': 6.845023,'examples_per_second': 934.985913}
I0102 17:44:10.570521 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':5900, 'time_taken': 6.760343,'examples_per_second': 946.697550}
I0102 17:44:17.005206 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':6000, 'time_taken': 6.434687,'examples_per_second': 994.609425}
I0102 17:44:23.327563 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':6100, 'time_taken': 6.322356,'examples_per_second': 1012.280829}
I0102 17:44:29.662757 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':6200, 'time_taken': 6.335191,'examples_per_second': 1010.229998}
I0102 17:44:36.107996 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':6300, 'time_taken': 6.445245,'examples_per_second': 992.980092}
I0102 17:44:42.714798 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':6400, 'time_taken': 6.606796,'examples_per_second': 968.699534}
I0102 17:44:49.241513 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':6500, 'time_taken': 6.526700,'examples_per_second': 980.587466}
I0102 17:44:55.886766 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':6600, 'time_taken': 6.645245,'examples_per_second': 963.094722}
I0102 17:45:02.651563 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':6700, 'time_taken': 6.764809,'examples_per_second': 946.072583}
I0102 17:45:10.074868 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':6800, 'time_taken': 7.423321,'examples_per_second': 862.147789}
I0102 17:45:16.727696 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':6900, 'time_taken': 6.652784,'examples_per_second': 962.003329}
I0102 17:45:23.168374 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':7000, 'time_taken': 6.440717,'examples_per_second': 993.678154}
I0102 17:45:29.836187 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':7100, 'time_taken': 6.667815,'examples_per_second': 959.834707}
I0102 17:45:36.289749 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':7200, 'time_taken': 6.453559,'examples_per_second': 991.700797}
I0102 17:45:42.792562 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':7300, 'time_taken': 6.502727,'examples_per_second': 984.202541}
I0102 17:45:49.268461 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':7400, 'time_taken': 6.475986,'examples_per_second': 988.266460}
I0102 17:45:55.809377 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':7500, 'time_taken': 6.540918,'examples_per_second': 978.455948}
I0102 17:46:02.259511 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':7600, 'time_taken': 6.450125,'examples_per_second': 992.228763}
I0102 17:46:09.506907 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':7700, 'time_taken': 7.247407,'examples_per_second': 883.074433}
I0102 17:46:15.790424 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':7800, 'time_taken': 6.283518,'examples_per_second': 1018.537769}
I0102 17:46:22.132790 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':7900, 'time_taken': 6.342362,'examples_per_second': 1009.087831}
I0102 17:46:28.571337 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':8000, 'time_taken': 6.438509,'examples_per_second': 994.018922}
I0102 17:46:35.124991 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':8100, 'time_taken': 6.553696,'examples_per_second': 976.548172}
I0102 17:46:41.507810 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':8200, 'time_taken': 6.382817,'examples_per_second': 1002.692067}
I0102 17:46:47.908888 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':8300, 'time_taken': 6.401069,'examples_per_second': 999.833045}
I0102 17:46:54.254829 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':8400, 'time_taken': 6.345950,'examples_per_second': 1008.517223}
I0102 17:47:00.687773 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':8500, 'time_taken': 6.432944,'examples_per_second': 994.878815}
I0102 17:47:08.035903 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':8600, 'time_taken': 7.348133,'examples_per_second': 870.969555}
I0102 17:47:14.366335 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':8700, 'time_taken': 6.330428,'examples_per_second': 1010.990074}
I0102 17:47:20.717069 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':8800, 'time_taken': 6.350719,'examples_per_second': 1007.759875}
I0102 17:47:27.048713 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':8900, 'time_taken': 6.331658,'examples_per_second': 1010.793639}
I0102 17:47:33.461897 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':9000, 'time_taken': 6.413187,'examples_per_second': 997.943764}
I0102 17:47:39.719265 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':9100, 'time_taken': 6.257351,'examples_per_second': 1022.797001}
I0102 17:47:46.097802 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':9200, 'time_taken': 6.378552,'examples_per_second': 1003.362525}
I0102 17:47:52.460012 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':9300, 'time_taken': 6.362211,'examples_per_second': 1005.939604}
I0102 17:47:58.838757 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':9400, 'time_taken': 6.378742,'examples_per_second': 1003.332710}
I0102 17:48:06.157112 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':9500, 'time_taken': 7.318360,'examples_per_second': 874.512915}
I0102 17:48:12.444807 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':9600, 'time_taken': 6.287694,'examples_per_second': 1017.861319}
I0102 17:48:18.804193 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':9700, 'time_taken': 6.359388,'examples_per_second': 1006.386131}
I0102 17:48:25.184434 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':9800, 'time_taken': 6.380238,'examples_per_second': 1003.097405}
I0102 17:48:31.404379 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':9900, 'time_taken': 6.219947,'examples_per_second': 1028.947658}
I0102 17:48:37.872041 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':10000, 'time_taken': 6.467657,'examples_per_second': 989.539202}
I0102 17:48:44.244192 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':10100, 'time_taken': 6.372156,'examples_per_second': 1004.369688}
I0102 17:48:50.488364 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':10200, 'time_taken': 6.244169,'examples_per_second': 1024.956165}
I0102 17:48:56.681662 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':10300, 'time_taken': 6.193285,'examples_per_second': 1033.377360}
I0102 17:49:03.516966 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':10400, 'time_taken': 6.835313,'examples_per_second': 936.314163}
I0102 17:49:10.308237 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':10500, 'time_taken': 6.791277,'examples_per_second': 942.385366}
I0102 17:49:16.551476 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':10600, 'time_taken': 6.243225,'examples_per_second': 1025.111205}
I0102 17:49:22.921007 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':10700, 'time_taken': 6.369545,'examples_per_second': 1004.781274}
I0102 17:49:29.173097 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':10800, 'time_taken': 6.252083,'examples_per_second': 1023.658825}
I0102 17:49:35.448140 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':10900, 'time_taken': 6.275050,'examples_per_second': 1019.912243}
I0102 17:49:41.711940 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':11000, 'time_taken': 6.263797,'examples_per_second': 1021.744432}
I0102 17:49:48.033161 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':11100, 'time_taken': 6.321223,'examples_per_second': 1012.462300}
I0102 17:49:54.279439 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':11200, 'time_taken': 6.246261,'examples_per_second': 1024.612906}
I0102 17:50:00.651208 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':11300, 'time_taken': 6.371788,'examples_per_second': 1004.427601}
I0102 17:50:07.920733 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':11400, 'time_taken': 7.269525,'examples_per_second': 880.387697}
I0102 17:50:14.207603 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':11500, 'time_taken': 6.286867,'examples_per_second': 1017.995147}
I0102 17:50:20.509302 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':11600, 'time_taken': 6.301702,'examples_per_second': 1015.598639}
I0102 17:50:26.812165 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':11700, 'time_taken': 6.302865,'examples_per_second': 1015.411279}
I0102 17:50:33.146493 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':11800, 'time_taken': 6.334328,'examples_per_second': 1010.367645}
I0102 17:50:39.520443 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':11900, 'time_taken': 6.373949,'examples_per_second': 1004.087172}
I0102 17:50:45.865708 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':12000, 'time_taken': 6.345263,'examples_per_second': 1008.626510}
I0102 17:50:52.046281 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':12100, 'time_taken': 6.180575,'examples_per_second': 1035.502298}
I0102 17:50:58.369383 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':12200, 'time_taken': 6.323104,'examples_per_second': 1012.161169}
I0102 17:51:05.687094 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':12300, 'time_taken': 7.317710,'examples_per_second': 874.590500}
I0102 17:51:12.173596 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':12400, 'time_taken': 6.486489,'examples_per_second': 986.666312}
I0102 17:51:18.655738 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':12500, 'time_taken': 6.482152,'examples_per_second': 987.326470}
I0102 17:51:25.077395 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':12600, 'time_taken': 6.421647,'examples_per_second': 996.629047}
I0102 17:51:31.348219 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':12700, 'time_taken': 6.270823,'examples_per_second': 1020.599611}
I0102 17:51:37.794206 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':12800, 'time_taken': 6.445996,'examples_per_second': 992.864401}
I0102 17:51:44.236102 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':12900, 'time_taken': 6.441886,'examples_per_second': 993.497875}
I0102 17:51:50.650038 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':13000, 'time_taken': 6.413945,'examples_per_second': 997.825874}
I0102 17:51:56.958925 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':13100, 'time_taken': 6.308892,'examples_per_second': 1014.441126}
I0102 17:52:04.015140 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':13200, 'time_taken': 7.056213,'examples_per_second': 907.002111}
I0102 17:52:10.834489 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':13300, 'time_taken': 6.819350,'examples_per_second': 938.505869}
I0102 17:52:17.185012 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':13400, 'time_taken': 6.350522,'examples_per_second': 1007.791126}
I0102 17:52:23.608968 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':13500, 'time_taken': 6.423958,'examples_per_second': 996.270551}
I0102 17:52:29.969226 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':13600, 'time_taken': 6.360256,'examples_per_second': 1006.248736}
I0102 17:52:36.382102 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':13700, 'time_taken': 6.412874,'examples_per_second': 997.992441}
I0102 17:52:42.770274 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':13800, 'time_taken': 6.388170,'examples_per_second': 1001.851897}
I0102 17:52:48.954083 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':13900, 'time_taken': 6.183816,'examples_per_second': 1034.959650}
I0102 17:52:54.750161 139857235859264 keras_utils.py:88] BenchmarkMetric: {'global step':14000, 'time_taken': 5.796078,'examples_per_second': 1104.194992}
14012/14012 - 992s - loss: 6.7232 - sparse_categorical_accuracy: 0.0058 - val_loss: 6.5366 - val_sparse_categorical_accuracy: 0.0119
I0102 17:54:09.623677 139857235859264 keras_utils.py:96] BenchmarkMetric: {'epoch':0, 'time_taken': 991.641315}
781/781 - 68s - loss: 6.5366 - sparse_categorical_accuracy: 0.0119
I0102 17:55:17.746846 139857235859264 lenet_imagenet_main.py:269] Run stats:
{'accuracy_top_1': 0.011863796040415764, 'eval_loss': 6.536616802215576, 'loss': 6.723243713378906, 'training_accuracy_top_1': 0.005757342092692852, 'step_timestamp_log': ['BatchTimestamp<batch_index: 1, timestamp: 1672681057.9848258>', 'BatchTimestamp<batch_index: 100, timestamp: 1672681074.5611913>', 'BatchTimestamp<batch_index: 200, timestamp: 1672681080.900755>', 'BatchTimestamp<batch_index: 300, timestamp: 1672681088.1240213>', 'BatchTimestamp<batch_index: 400, timestamp: 1672681094.5694282>', 'BatchTimestamp<batch_index: 500, timestamp: 1672681101.0013561>', 'BatchTimestamp<batch_index: 600, timestamp: 1672681107.4014342>', 'BatchTimestamp<batch_index: 700, timestamp: 1672681113.9318302>', 'BatchTimestamp<batch_index: 800, timestamp: 1672681120.5071042>', 'BatchTimestamp<batch_index: 900, timestamp: 1672681126.841492>', 'BatchTimestamp<batch_index: 1000, timestamp: 1672681133.2329316>', 'BatchTimestamp<batch_index: 1100, timestamp: 1672681139.6148815>', 'BatchTimestamp<batch_index: 1200, timestamp: 1672681146.7460248>', 'BatchTimestamp<batch_index: 1300, timestamp: 1672681153.0310717>', 'BatchTimestamp<batch_index: 1400, timestamp: 1672681159.3278897>', 'BatchTimestamp<batch_index: 1500, timestamp: 1672681165.6959624>', 'BatchTimestamp<batch_index: 1600, timestamp: 1672681172.0912132>', 'BatchTimestamp<batch_index: 1700, timestamp: 1672681178.4961646>', 'BatchTimestamp<batch_index: 1800, timestamp: 1672681184.853442>', 'BatchTimestamp<batch_index: 1900, timestamp: 1672681191.3197901>', 'BatchTimestamp<batch_index: 2000, timestamp: 1672681197.6357098>', 'BatchTimestamp<batch_index: 2100, timestamp: 1672681204.8241453>', 'BatchTimestamp<batch_index: 2200, timestamp: 1672681211.1220906>', 'BatchTimestamp<batch_index: 2300, timestamp: 1672681217.3946579>', 'BatchTimestamp<batch_index: 2400, timestamp: 1672681223.7754838>', 'BatchTimestamp<batch_index: 2500, timestamp: 1672681230.2238681>', 'BatchTimestamp<batch_index: 2600, timestamp: 1672681236.610661>', 'BatchTimestamp<batch_index: 2700, timestamp: 1672681243.0153027>', 'BatchTimestamp<batch_index: 2800, timestamp: 1672681249.4337249>', 'BatchTimestamp<batch_index: 2900, timestamp: 1672681255.8662255>', 'BatchTimestamp<batch_index: 3000, timestamp: 1672681262.3296216>', 'BatchTimestamp<batch_index: 3100, timestamp: 1672681269.51143>', 'BatchTimestamp<batch_index: 3200, timestamp: 1672681275.7005324>', 'BatchTimestamp<batch_index: 3300, timestamp: 1672681282.0552745>', 'BatchTimestamp<batch_index: 3400, timestamp: 1672681288.2899623>', 'BatchTimestamp<batch_index: 3500, timestamp: 1672681294.6710315>', 'BatchTimestamp<batch_index: 3600, timestamp: 1672681300.9814584>', 'BatchTimestamp<batch_index: 3700, timestamp: 1672681307.4902358>', 'BatchTimestamp<batch_index: 3800, timestamp: 1672681313.8791127>', 'BatchTimestamp<batch_index: 3900, timestamp: 1672681320.3318634>', 'BatchTimestamp<batch_index: 4000, timestamp: 1672681327.7851431>', 'BatchTimestamp<batch_index: 4100, timestamp: 1672681334.2200866>', 'BatchTimestamp<batch_index: 4200, timestamp: 1672681340.586808>', 'BatchTimestamp<batch_index: 4300, timestamp: 1672681346.998991>', 'BatchTimestamp<batch_index: 4400, timestamp: 1672681353.3423042>', 'BatchTimestamp<batch_index: 4500, timestamp: 1672681359.6526184>', 'BatchTimestamp<batch_index: 4600, timestamp: 1672681366.110205>', 'BatchTimestamp<batch_index: 4700, timestamp: 1672681372.56331>', 'BatchTimestamp<batch_index: 4800, timestamp: 1672681378.7218862>', 'BatchTimestamp<batch_index: 4900, timestamp: 1672681385.9329424>', 'BatchTimestamp<batch_index: 5000, timestamp: 1672681392.3957593>', 'BatchTimestamp<batch_index: 5100, timestamp: 1672681398.8429694>', 'BatchTimestamp<batch_index: 5200, timestamp: 1672681405.2257729>', 'BatchTimestamp<batch_index: 5300, timestamp: 1672681411.6327066>', 'BatchTimestamp<batch_index: 5400, timestamp: 1672681418.0462475>', 'BatchTimestamp<batch_index: 5500, timestamp: 1672681424.254476>', 'BatchTimestamp<batch_index: 5600, timestamp: 1672681430.6518214>', 'BatchTimestamp<batch_index: 5700, timestamp: 1672681436.9650958>', 'BatchTimestamp<batch_index: 5800, timestamp: 1672681443.8101187>', 'BatchTimestamp<batch_index: 5900, timestamp: 1672681450.5704615>', 'BatchTimestamp<batch_index: 6000, timestamp: 1672681457.0051482>', 'BatchTimestamp<batch_index: 6100, timestamp: 1672681463.3275044>', 'BatchTimestamp<batch_index: 6200, timestamp: 1672681469.6626954>', 'BatchTimestamp<batch_index: 6300, timestamp: 1672681476.1079404>', 'BatchTimestamp<batch_index: 6400, timestamp: 1672681482.7147362>', 'BatchTimestamp<batch_index: 6500, timestamp: 1672681489.241436>', 'BatchTimestamp<batch_index: 6600, timestamp: 1672681495.8866806>', 'BatchTimestamp<batch_index: 6700, timestamp: 1672681502.6514893>', 'BatchTimestamp<batch_index: 6800, timestamp: 1672681510.0748105>', 'BatchTimestamp<batch_index: 6900, timestamp: 1672681516.7275941>', 'BatchTimestamp<batch_index: 7000, timestamp: 1672681523.1683114>', 'BatchTimestamp<batch_index: 7100, timestamp: 1672681529.836126>', 'BatchTimestamp<batch_index: 7200, timestamp: 1672681536.2896855>', 'BatchTimestamp<batch_index: 7300, timestamp: 1672681542.792412>', 'BatchTimestamp<batch_index: 7400, timestamp: 1672681549.2683983>', 'BatchTimestamp<batch_index: 7500, timestamp: 1672681555.8093162>', 'BatchTimestamp<batch_index: 7600, timestamp: 1672681562.2594416>', 'BatchTimestamp<batch_index: 7700, timestamp: 1672681569.5068488>', 'BatchTimestamp<batch_index: 7800, timestamp: 1672681575.7903664>', 'BatchTimestamp<batch_index: 7900, timestamp: 1672681582.132728>', 'BatchTimestamp<batch_index: 8000, timestamp: 1672681588.5712373>', 'BatchTimestamp<batch_index: 8100, timestamp: 1672681595.1249335>', 'BatchTimestamp<batch_index: 8200, timestamp: 1672681601.5077505>', 'BatchTimestamp<batch_index: 8300, timestamp: 1672681607.9088192>', 'BatchTimestamp<batch_index: 8400, timestamp: 1672681614.2547693>', 'BatchTimestamp<batch_index: 8500, timestamp: 1672681620.6877136>', 'BatchTimestamp<batch_index: 8600, timestamp: 1672681628.0358465>', 'BatchTimestamp<batch_index: 8700, timestamp: 1672681634.3662746>', 'BatchTimestamp<batch_index: 8800, timestamp: 1672681640.7169938>', 'BatchTimestamp<batch_index: 8900, timestamp: 1672681647.0486522>', 'BatchTimestamp<batch_index: 9000, timestamp: 1672681653.4618392>', 'BatchTimestamp<batch_index: 9100, timestamp: 1672681659.7191904>', 'BatchTimestamp<batch_index: 9200, timestamp: 1672681666.0977423>', 'BatchTimestamp<batch_index: 9300, timestamp: 1672681672.4599533>', 'BatchTimestamp<batch_index: 9400, timestamp: 1672681678.8386948>', 'BatchTimestamp<batch_index: 9500, timestamp: 1672681686.1570544>', 'BatchTimestamp<batch_index: 9600, timestamp: 1672681692.444748>', 'BatchTimestamp<batch_index: 9700, timestamp: 1672681698.804136>', 'BatchTimestamp<batch_index: 9800, timestamp: 1672681705.1843739>', 'BatchTimestamp<batch_index: 9900, timestamp: 1672681711.404321>', 'BatchTimestamp<batch_index: 10000, timestamp: 1672681717.8719778>', 'BatchTimestamp<batch_index: 10100, timestamp: 1672681724.2441335>', 'BatchTimestamp<batch_index: 10200, timestamp: 1672681730.488303>', 'BatchTimestamp<batch_index: 10300, timestamp: 1672681736.6815875>', 'BatchTimestamp<batch_index: 10400, timestamp: 1672681743.5169>', 'BatchTimestamp<batch_index: 10500, timestamp: 1672681750.308177>', 'BatchTimestamp<batch_index: 10600, timestamp: 1672681756.551402>', 'BatchTimestamp<batch_index: 10700, timestamp: 1672681762.9209476>', 'BatchTimestamp<batch_index: 10800, timestamp: 1672681769.1730306>', 'BatchTimestamp<batch_index: 10900, timestamp: 1672681775.4480803>', 'BatchTimestamp<batch_index: 11000, timestamp: 1672681781.7118776>', 'BatchTimestamp<batch_index: 11100, timestamp: 1672681788.0331006>', 'BatchTimestamp<batch_index: 11200, timestamp: 1672681794.279362>', 'BatchTimestamp<batch_index: 11300, timestamp: 1672681800.6511502>', 'BatchTimestamp<batch_index: 11400, timestamp: 1672681807.9206748>', 'BatchTimestamp<batch_index: 11500, timestamp: 1672681814.2075417>', 'BatchTimestamp<batch_index: 11600, timestamp: 1672681820.5092437>', 'BatchTimestamp<batch_index: 11700, timestamp: 1672681826.8121085>', 'BatchTimestamp<batch_index: 11800, timestamp: 1672681833.1464365>', 'BatchTimestamp<batch_index: 11900, timestamp: 1672681839.520385>', 'BatchTimestamp<batch_index: 12000, timestamp: 1672681845.8656476>', 'BatchTimestamp<batch_index: 12100, timestamp: 1672681852.046223>', 'BatchTimestamp<batch_index: 12200, timestamp: 1672681858.3693266>', 'BatchTimestamp<batch_index: 12300, timestamp: 1672681865.687037>', 'BatchTimestamp<batch_index: 12400, timestamp: 1672681872.1735258>', 'BatchTimestamp<batch_index: 12500, timestamp: 1672681878.6556776>', 'BatchTimestamp<batch_index: 12600, timestamp: 1672681885.0773246>', 'BatchTimestamp<batch_index: 12700, timestamp: 1672681891.348148>', 'BatchTimestamp<batch_index: 12800, timestamp: 1672681897.7941442>', 'BatchTimestamp<batch_index: 12900, timestamp: 1672681904.23603>', 'BatchTimestamp<batch_index: 13000, timestamp: 1672681910.6499748>', 'BatchTimestamp<batch_index: 13100, timestamp: 1672681916.9588673>', 'BatchTimestamp<batch_index: 13200, timestamp: 1672681924.0150802>', 'BatchTimestamp<batch_index: 13300, timestamp: 1672681930.8344302>', 'BatchTimestamp<batch_index: 13400, timestamp: 1672681937.1849525>', 'BatchTimestamp<batch_index: 13500, timestamp: 1672681943.6089103>', 'BatchTimestamp<batch_index: 13600, timestamp: 1672681949.9691668>', 'BatchTimestamp<batch_index: 13700, timestamp: 1672681956.382041>', 'BatchTimestamp<batch_index: 13800, timestamp: 1672681962.7702107>', 'BatchTimestamp<batch_index: 13900, timestamp: 1672681968.9540267>', 'BatchTimestamp<batch_index: 14000, timestamp: 1672681974.7501044>'], 'train_finish_time': 1672682049.6245744, 'avg_exp_per_second': 977.3494054988447}
