2023-01-02 18:04:00.891376: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-02 18:04:03.210151: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64:/usr/local/nccl2/lib:/usr/local/cuda/extras/CUPTI/lib64
2023-01-02 18:04:03.210314: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64:/usr/local/nccl2/lib:/usr/local/cuda/extras/CUPTI/lib64
2023-01-02 18:04:03.210340: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-02 18:04:05.619278: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 18:04:05.649310: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 18:04:05.652176: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 18:04:05.655643: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-02 18:04:05.656180: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 18:04:05.658971: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 18:04:05.661547: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 18:04:07.386593: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 18:04:07.388600: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 18:04:07.390270: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 18:04:07.391969: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 13582 MB memory:  -> device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5
INFO:tensorflow:Using MirroredStrategy with devices ('/job:localhost/replica:0/task:0/device:GPU:0',)
I0102 18:04:07.730282 140647089272640 mirrored_strategy.py:374] Using MirroredStrategy with devices ('/job:localhost/replica:0/task:0/device:GPU:0',)
WARNING:tensorflow:From /opt/conda/lib/python3.7/site-packages/tensorflow/python/autograph/pyct/static_analysis/liveness.py:83: Analyzer.lamba_check (from tensorflow.python.autograph.pyct.static_analysis.liveness) is deprecated and will be removed after 2023-09-23.
Instructions for updating:
Lambda fuctions will be no more assumed to be used in the statement where they are used, or at least in the same block. https://github.com/tensorflow/tensorflow/issues/56089
W0102 18:04:07.774349 140647089272640 deprecation.py:356] From /opt/conda/lib/python3.7/site-packages/tensorflow/python/autograph/pyct/static_analysis/liveness.py:83: Analyzer.lamba_check (from tensorflow.python.autograph.pyct.static_analysis.liveness) is deprecated and will be removed after 2023-09-23.
Instructions for updating:
Lambda fuctions will be no more assumed to be used in the statement where they are used, or at least in the same block. https://github.com/tensorflow/tensorflow/issues/56089
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 18:04:08.608953 140647089272640 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 18:04:08.611925 140647089272640 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 18:04:08.614210 140647089272640 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 18:04:08.615092 140647089272640 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 18:04:08.919784 140647089272640 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 18:04:08.921802 140647089272640 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 18:04:08.923629 140647089272640 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 18:04:08.927037 140647089272640 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 18:04:08.928916 140647089272640 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 18:04:10.083551 140647089272640 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
2023-01-02 18:04:16.793749: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8200
I0102 18:04:25.426404 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':100, 'time_taken': 16.675705,'examples_per_second': 383.791871}
I0102 18:04:31.909417 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':200, 'time_taken': 6.483037,'examples_per_second': 987.191688}
I0102 18:04:38.211881 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':300, 'time_taken': 6.302462,'examples_per_second': 1015.476158}
I0102 18:04:44.471057 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':400, 'time_taken': 6.259172,'examples_per_second': 1022.499468}
I0102 18:04:50.899769 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':500, 'time_taken': 6.428717,'examples_per_second': 995.532991}
I0102 18:04:57.246725 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':600, 'time_taken': 6.346943,'examples_per_second': 1008.359511}
I0102 18:05:04.234962 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':700, 'time_taken': 6.988247,'examples_per_second': 915.823361}
I0102 18:05:10.978468 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':800, 'time_taken': 6.743504,'examples_per_second': 949.061557}
I0102 18:05:17.349205 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':900, 'time_taken': 6.370743,'examples_per_second': 1004.592394}
I0102 18:05:23.851097 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':1000, 'time_taken': 6.501888,'examples_per_second': 984.329541}
I0102 18:05:30.166103 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':1100, 'time_taken': 6.315003,'examples_per_second': 1013.459586}
I0102 18:05:36.460667 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':1200, 'time_taken': 6.294506,'examples_per_second': 1016.759722}
I0102 18:05:42.813489 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':1300, 'time_taken': 6.352871,'examples_per_second': 1007.418469}
I0102 18:05:49.134059 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':1400, 'time_taken': 6.320579,'examples_per_second': 1012.565493}
I0102 18:05:55.416301 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':1500, 'time_taken': 6.282248,'examples_per_second': 1018.743683}
I0102 18:06:02.103264 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':1600, 'time_taken': 6.686933,'examples_per_second': 957.090487}
I0102 18:06:09.119928 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':1700, 'time_taken': 7.016692,'examples_per_second': 912.110669}
I0102 18:06:15.629974 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':1800, 'time_taken': 6.510030,'examples_per_second': 983.098419}
I0102 18:06:22.106442 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':1900, 'time_taken': 6.476391,'examples_per_second': 988.204721}
I0102 18:06:28.462246 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':2000, 'time_taken': 6.355901,'examples_per_second': 1006.938314}
I0102 18:06:34.861866 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':2100, 'time_taken': 6.399617,'examples_per_second': 1000.059817}
I0102 18:06:41.248092 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':2200, 'time_taken': 6.386219,'examples_per_second': 1002.157887}
I0102 18:06:47.563793 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':2300, 'time_taken': 6.315708,'examples_per_second': 1013.346380}
I0102 18:06:53.990412 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':2400, 'time_taken': 6.426622,'examples_per_second': 995.857557}
I0102 18:07:00.466850 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':2500, 'time_taken': 6.476439,'examples_per_second': 988.197409}
I0102 18:07:07.849099 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':2600, 'time_taken': 7.382249,'examples_per_second': 866.944519}
I0102 18:07:14.299500 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':2700, 'time_taken': 6.450399,'examples_per_second': 992.186624}
I0102 18:07:20.687798 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':2800, 'time_taken': 6.388296,'examples_per_second': 1001.832155}
I0102 18:07:27.140358 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':2900, 'time_taken': 6.452557,'examples_per_second': 991.854844}
I0102 18:07:33.425985 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':3000, 'time_taken': 6.285632,'examples_per_second': 1018.195203}
I0102 18:07:39.967861 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':3100, 'time_taken': 6.541874,'examples_per_second': 978.312988}
I0102 18:07:46.160466 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':3200, 'time_taken': 6.192605,'examples_per_second': 1033.490749}
I0102 18:07:52.601852 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':3300, 'time_taken': 6.441389,'examples_per_second': 993.574583}
I0102 18:07:58.818441 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':3400, 'time_taken': 6.216588,'examples_per_second': 1029.503562}
I0102 18:08:06.011504 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':3500, 'time_taken': 7.193045,'examples_per_second': 889.748314}
I0102 18:08:12.378563 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':3600, 'time_taken': 6.367079,'examples_per_second': 1005.170537}
I0102 18:08:18.713480 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':3700, 'time_taken': 6.334915,'examples_per_second': 1010.274063}
I0102 18:08:25.080502 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':3800, 'time_taken': 6.367021,'examples_per_second': 1005.179646}
I0102 18:08:31.547446 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':3900, 'time_taken': 6.466935,'examples_per_second': 989.649669}
I0102 18:08:37.997737 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':4000, 'time_taken': 6.450301,'examples_per_second': 992.201733}
I0102 18:08:44.375327 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':4100, 'time_taken': 6.377583,'examples_per_second': 1003.515039}
I0102 18:08:50.831262 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':4200, 'time_taken': 6.451953,'examples_per_second': 991.947756}
I0102 18:08:57.234181 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':4300, 'time_taken': 6.406910,'examples_per_second': 998.921412}
I0102 18:09:04.224472 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':4400, 'time_taken': 6.990276,'examples_per_second': 915.557510}
I0102 18:09:11.059821 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':4500, 'time_taken': 6.835359,'examples_per_second': 936.307794}
I0102 18:09:17.865758 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':4600, 'time_taken': 6.805937,'examples_per_second': 940.355450}
I0102 18:09:24.301671 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':4700, 'time_taken': 6.435917,'examples_per_second': 994.419340}
I0102 18:09:30.650043 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':4800, 'time_taken': 6.348373,'examples_per_second': 1008.132368}
I0102 18:09:37.032776 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':4900, 'time_taken': 6.382730,'examples_per_second': 1002.705738}
I0102 18:09:43.404678 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':5000, 'time_taken': 6.371904,'examples_per_second': 1004.409298}
I0102 18:09:49.796330 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':5100, 'time_taken': 6.391650,'examples_per_second': 1001.306361}
I0102 18:09:56.232029 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':5200, 'time_taken': 6.435649,'examples_per_second': 994.460674}
I0102 18:10:03.167968 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':5300, 'time_taken': 6.935987,'examples_per_second': 922.723728}
I0102 18:10:09.855728 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':5400, 'time_taken': 6.687765,'examples_per_second': 956.971373}
I0102 18:10:16.195962 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':5500, 'time_taken': 6.340231,'examples_per_second': 1009.426915}
I0102 18:10:22.684021 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':5600, 'time_taken': 6.488058,'examples_per_second': 986.427666}
I0102 18:10:29.142563 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':5700, 'time_taken': 6.458518,'examples_per_second': 990.939403}
I0102 18:10:35.562094 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':5800, 'time_taken': 6.419547,'examples_per_second': 996.955106}
I0102 18:10:41.956323 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':5900, 'time_taken': 6.394239,'examples_per_second': 1000.900901}
I0102 18:10:48.442011 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':6000, 'time_taken': 6.485688,'examples_per_second': 986.788108}
I0102 18:10:54.882747 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':6100, 'time_taken': 6.440708,'examples_per_second': 993.679626}
I0102 18:11:01.408614 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':6200, 'time_taken': 6.525875,'examples_per_second': 980.711421}
I0102 18:11:08.711863 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':6300, 'time_taken': 7.303266,'examples_per_second': 876.320231}
I0102 18:11:15.128215 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':6400, 'time_taken': 6.416355,'examples_per_second': 997.451061}
I0102 18:11:21.535149 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':6500, 'time_taken': 6.406934,'examples_per_second': 998.917731}
I0102 18:11:28.104698 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':6600, 'time_taken': 6.569550,'examples_per_second': 974.191494}
I0102 18:11:34.559724 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':6700, 'time_taken': 6.455026,'examples_per_second': 991.475420}
I0102 18:11:41.106381 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':6800, 'time_taken': 6.546654,'examples_per_second': 977.598671}
I0102 18:11:47.658968 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':6900, 'time_taken': 6.552587,'examples_per_second': 976.713432}
I0102 18:11:54.131632 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':7000, 'time_taken': 6.472667,'examples_per_second': 988.773183}
I0102 18:12:00.602148 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':7100, 'time_taken': 6.470511,'examples_per_second': 989.102758}
I0102 18:12:08.014263 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':7200, 'time_taken': 7.412106,'examples_per_second': 863.452299}
I0102 18:12:14.600883 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':7300, 'time_taken': 6.586632,'examples_per_second': 971.665066}
I0102 18:12:21.238526 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':7400, 'time_taken': 6.637645,'examples_per_second': 964.197461}
I0102 18:12:27.767701 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':7500, 'time_taken': 6.529173,'examples_per_second': 980.216004}
I0102 18:12:34.213347 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':7600, 'time_taken': 6.445647,'examples_per_second': 992.918203}
I0102 18:12:40.659187 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':7700, 'time_taken': 6.445836,'examples_per_second': 992.889079}
I0102 18:12:47.095033 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':7800, 'time_taken': 6.435851,'examples_per_second': 994.429508}
I0102 18:12:53.590598 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':7900, 'time_taken': 6.495554,'examples_per_second': 985.289255}
I0102 18:13:00.263908 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':8000, 'time_taken': 6.673320,'examples_per_second': 959.042867}
I0102 18:13:07.685970 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':8100, 'time_taken': 7.422041,'examples_per_second': 862.296538}
I0102 18:13:14.159291 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':8200, 'time_taken': 6.473326,'examples_per_second': 988.672525}
I0102 18:13:20.648274 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':8300, 'time_taken': 6.488997,'examples_per_second': 986.284904}
I0102 18:13:27.122163 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':8400, 'time_taken': 6.473886,'examples_per_second': 988.586996}
I0102 18:13:33.594288 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':8500, 'time_taken': 6.472125,'examples_per_second': 988.856084}
I0102 18:13:39.958964 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':8600, 'time_taken': 6.364678,'examples_per_second': 1005.549744}
I0102 18:13:46.447584 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':8700, 'time_taken': 6.488619,'examples_per_second': 986.342453}
I0102 18:13:52.961498 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':8800, 'time_taken': 6.513900,'examples_per_second': 982.514381}
I0102 18:13:59.306357 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':8900, 'time_taken': 6.344871,'examples_per_second': 1008.688705}
I0102 18:14:06.508031 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':9000, 'time_taken': 7.201664,'examples_per_second': 888.683537}
I0102 18:14:12.967967 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':9100, 'time_taken': 6.459950,'examples_per_second': 990.719674}
I0102 18:14:19.409953 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':9200, 'time_taken': 6.441968,'examples_per_second': 993.485263}
I0102 18:14:25.908730 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':9300, 'time_taken': 6.498777,'examples_per_second': 984.800620}
I0102 18:14:32.443601 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':9400, 'time_taken': 6.534886,'examples_per_second': 979.359035}
I0102 18:14:38.862312 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':9500, 'time_taken': 6.418711,'examples_per_second': 997.084900}
I0102 18:14:45.375717 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':9600, 'time_taken': 6.513406,'examples_per_second': 982.588863}
I0102 18:14:51.891215 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':9700, 'time_taken': 6.515500,'examples_per_second': 982.272995}
I0102 18:14:58.337862 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':9800, 'time_taken': 6.446644,'examples_per_second': 992.764634}
I0102 18:15:05.731218 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':9900, 'time_taken': 7.393359,'examples_per_second': 865.641670}
I0102 18:15:12.422068 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':10000, 'time_taken': 6.690851,'examples_per_second': 956.530014}
I0102 18:15:18.969908 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':10100, 'time_taken': 6.547839,'examples_per_second': 977.421758}
I0102 18:15:25.319327 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':10200, 'time_taken': 6.349405,'examples_per_second': 1007.968455}
I0102 18:15:31.776238 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':10300, 'time_taken': 6.456924,'examples_per_second': 991.183970}
I0102 18:15:38.235341 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':10400, 'time_taken': 6.459105,'examples_per_second': 990.849422}
I0102 18:15:44.468995 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':10500, 'time_taken': 6.233654,'examples_per_second': 1026.685108}
I0102 18:15:51.023687 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':10600, 'time_taken': 6.554672,'examples_per_second': 976.402856}
I0102 18:15:57.476984 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':10700, 'time_taken': 6.453314,'examples_per_second': 991.738535}
I0102 18:16:04.638219 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':10800, 'time_taken': 7.161236,'examples_per_second': 893.700497}
I0102 18:16:11.269567 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':10900, 'time_taken': 6.631354,'examples_per_second': 965.112054}
I0102 18:16:17.714175 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':11000, 'time_taken': 6.444590,'examples_per_second': 993.080967}
I0102 18:16:24.113331 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':11100, 'time_taken': 6.399171,'examples_per_second': 1000.129605}
I0102 18:16:30.596292 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':11200, 'time_taken': 6.482966,'examples_per_second': 987.202434}
I0102 18:16:37.099798 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':11300, 'time_taken': 6.503496,'examples_per_second': 984.086144}
I0102 18:16:43.578828 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':11400, 'time_taken': 6.479027,'examples_per_second': 987.802639}
I0102 18:16:50.146465 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':11500, 'time_taken': 6.567644,'examples_per_second': 974.474274}
I0102 18:16:56.622281 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':11600, 'time_taken': 6.475805,'examples_per_second': 988.294113}
I0102 18:17:03.503759 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':11700, 'time_taken': 6.881483,'examples_per_second': 930.032109}
I0102 18:17:10.662284 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':11800, 'time_taken': 7.158532,'examples_per_second': 894.038004}
I0102 18:17:17.185829 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':11900, 'time_taken': 6.523544,'examples_per_second': 981.061853}
I0102 18:17:23.725638 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':12000, 'time_taken': 6.539809,'examples_per_second': 978.621783}
I0102 18:17:30.138514 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':12100, 'time_taken': 6.412875,'examples_per_second': 997.992330}
I0102 18:17:36.605042 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':12200, 'time_taken': 6.466527,'examples_per_second': 989.712063}
I0102 18:17:42.984014 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':12300, 'time_taken': 6.378973,'examples_per_second': 1003.296335}
I0102 18:17:49.442755 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':12400, 'time_taken': 6.458741,'examples_per_second': 990.905238}
I0102 18:17:56.092130 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':12500, 'time_taken': 6.649377,'examples_per_second': 962.496170}
I0102 18:18:02.801492 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':12600, 'time_taken': 6.709338,'examples_per_second': 953.894449}
I0102 18:18:09.943924 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':12700, 'time_taken': 7.142454,'examples_per_second': 896.050525}
I0102 18:18:16.389774 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':12800, 'time_taken': 6.445850,'examples_per_second': 992.886876}
I0102 18:18:22.840056 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':12900, 'time_taken': 6.450278,'examples_per_second': 992.205327}
I0102 18:18:29.275802 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':13000, 'time_taken': 6.435741,'examples_per_second': 994.446454}
I0102 18:18:35.684009 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':13100, 'time_taken': 6.408216,'examples_per_second': 998.717822}
I0102 18:18:42.191708 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':13200, 'time_taken': 6.507683,'examples_per_second': 983.452973}
I0102 18:18:48.654001 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':13300, 'time_taken': 6.462304,'examples_per_second': 990.358839}
I0102 18:18:55.131767 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':13400, 'time_taken': 6.477756,'examples_per_second': 987.996530}
I0102 18:19:01.701408 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':13500, 'time_taken': 6.569654,'examples_per_second': 974.176044}
I0102 18:19:09.259472 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':13600, 'time_taken': 7.558048,'examples_per_second': 846.779458}
I0102 18:19:15.636520 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':13700, 'time_taken': 6.377068,'examples_per_second': 1003.596041}
I0102 18:19:22.174758 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':13800, 'time_taken': 6.538235,'examples_per_second': 978.857487}
I0102 18:19:28.388182 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':13900, 'time_taken': 6.213426,'examples_per_second': 1030.027538}
I0102 18:19:34.181063 140647089272640 keras_utils.py:88] BenchmarkMetric: {'global step':14000, 'time_taken': 5.792879,'examples_per_second': 1104.804689}
14012/14012 - 1001s - loss: 6.7222 - sparse_categorical_accuracy: 0.0058 - val_loss: 6.5648 - val_sparse_categorical_accuracy: 0.0103
I0102 18:20:49.318988 140647089272640 keras_utils.py:96] BenchmarkMetric: {'epoch':0, 'time_taken': 1000.570719}
781/781 - 70s - loss: 6.5648 - sparse_categorical_accuracy: 0.0103
I0102 18:21:59.051511 140647089272640 lenet_imagenet_main.py:269] Run stats:
{'accuracy_top_1': 0.010263284668326378, 'eval_loss': 6.564774513244629, 'loss': 6.722190856933594, 'training_accuracy_top_1': 0.0057863350957632065, 'step_timestamp_log': ['BatchTimestamp<batch_index: 1, timestamp: 1672682648.7506168>', 'BatchTimestamp<batch_index: 100, timestamp: 1672682665.4263217>', 'BatchTimestamp<batch_index: 200, timestamp: 1672682671.9093585>', 'BatchTimestamp<batch_index: 300, timestamp: 1672682678.2118206>', 'BatchTimestamp<batch_index: 400, timestamp: 1672682684.4709926>', 'BatchTimestamp<batch_index: 500, timestamp: 1672682690.8997097>', 'BatchTimestamp<batch_index: 600, timestamp: 1672682697.2466524>', 'BatchTimestamp<batch_index: 700, timestamp: 1672682704.2348995>', 'BatchTimestamp<batch_index: 800, timestamp: 1672682710.978403>', 'BatchTimestamp<batch_index: 900, timestamp: 1672682717.3491461>', 'BatchTimestamp<batch_index: 1000, timestamp: 1672682723.8510337>', 'BatchTimestamp<batch_index: 1100, timestamp: 1672682730.1660364>', 'BatchTimestamp<batch_index: 1200, timestamp: 1672682736.4605422>', 'BatchTimestamp<batch_index: 1300, timestamp: 1672682742.8134136>', 'BatchTimestamp<batch_index: 1400, timestamp: 1672682749.1339924>', 'BatchTimestamp<batch_index: 1500, timestamp: 1672682755.41624>', 'BatchTimestamp<batch_index: 1600, timestamp: 1672682762.103173>', 'BatchTimestamp<batch_index: 1700, timestamp: 1672682769.1198654>', 'BatchTimestamp<batch_index: 1800, timestamp: 1672682775.6298952>', 'BatchTimestamp<batch_index: 1900, timestamp: 1672682782.106286>', 'BatchTimestamp<batch_index: 2000, timestamp: 1672682788.4621868>', 'BatchTimestamp<batch_index: 2100, timestamp: 1672682794.861804>', 'BatchTimestamp<batch_index: 2200, timestamp: 1672682801.2480233>', 'BatchTimestamp<batch_index: 2300, timestamp: 1672682807.5637314>', 'BatchTimestamp<batch_index: 2400, timestamp: 1672682813.9903533>', 'BatchTimestamp<batch_index: 2500, timestamp: 1672682820.466792>', 'BatchTimestamp<batch_index: 2600, timestamp: 1672682827.8490407>', 'BatchTimestamp<batch_index: 2700, timestamp: 1672682834.2994401>', 'BatchTimestamp<batch_index: 2800, timestamp: 1672682840.6877358>', 'BatchTimestamp<batch_index: 2900, timestamp: 1672682847.140293>', 'BatchTimestamp<batch_index: 3000, timestamp: 1672682853.4259245>', 'BatchTimestamp<batch_index: 3100, timestamp: 1672682859.9677982>', 'BatchTimestamp<batch_index: 3200, timestamp: 1672682866.1604033>', 'BatchTimestamp<batch_index: 3300, timestamp: 1672682872.6017919>', 'BatchTimestamp<batch_index: 3400, timestamp: 1672682878.8183804>', 'BatchTimestamp<batch_index: 3500, timestamp: 1672682886.0114257>', 'BatchTimestamp<batch_index: 3600, timestamp: 1672682892.3785045>', 'BatchTimestamp<batch_index: 3700, timestamp: 1672682898.7134192>', 'BatchTimestamp<batch_index: 3800, timestamp: 1672682905.0804403>', 'BatchTimestamp<batch_index: 3900, timestamp: 1672682911.5473752>', 'BatchTimestamp<batch_index: 4000, timestamp: 1672682917.9976764>', 'BatchTimestamp<batch_index: 4100, timestamp: 1672682924.375259>', 'BatchTimestamp<batch_index: 4200, timestamp: 1672682930.8272116>', 'BatchTimestamp<batch_index: 4300, timestamp: 1672682937.234122>', 'BatchTimestamp<batch_index: 4400, timestamp: 1672682944.2243984>', 'BatchTimestamp<batch_index: 4500, timestamp: 1672682951.0597575>', 'BatchTimestamp<batch_index: 4600, timestamp: 1672682957.8656945>', 'BatchTimestamp<batch_index: 4700, timestamp: 1672682964.3016112>', 'BatchTimestamp<batch_index: 4800, timestamp: 1672682970.649984>', 'BatchTimestamp<batch_index: 4900, timestamp: 1672682977.032714>', 'BatchTimestamp<batch_index: 5000, timestamp: 1672682983.4046183>', 'BatchTimestamp<batch_index: 5100, timestamp: 1672682989.7962685>', 'BatchTimestamp<batch_index: 5200, timestamp: 1672682996.2319176>', 'BatchTimestamp<batch_index: 5300, timestamp: 1672683003.1679049>', 'BatchTimestamp<batch_index: 5400, timestamp: 1672683009.8556702>', 'BatchTimestamp<batch_index: 5500, timestamp: 1672683016.1959014>', 'BatchTimestamp<batch_index: 5600, timestamp: 1672683022.6839595>', 'BatchTimestamp<batch_index: 5700, timestamp: 1672683029.1424775>', 'BatchTimestamp<batch_index: 5800, timestamp: 1672683035.5620244>', 'BatchTimestamp<batch_index: 5900, timestamp: 1672683041.9562638>', 'BatchTimestamp<batch_index: 6000, timestamp: 1672683048.441952>', 'BatchTimestamp<batch_index: 6100, timestamp: 1672683054.8826597>', 'BatchTimestamp<batch_index: 6200, timestamp: 1672683061.4085345>', 'BatchTimestamp<batch_index: 6300, timestamp: 1672683068.7118008>', 'BatchTimestamp<batch_index: 6400, timestamp: 1672683075.1281557>', 'BatchTimestamp<batch_index: 6500, timestamp: 1672683081.5350897>', 'BatchTimestamp<batch_index: 6600, timestamp: 1672683088.10464>', 'BatchTimestamp<batch_index: 6700, timestamp: 1672683094.5596664>', 'BatchTimestamp<batch_index: 6800, timestamp: 1672683101.1063201>', 'BatchTimestamp<batch_index: 6900, timestamp: 1672683107.6589074>', 'BatchTimestamp<batch_index: 7000, timestamp: 1672683114.1315749>', 'BatchTimestamp<batch_index: 7100, timestamp: 1672683120.6020856>', 'BatchTimestamp<batch_index: 7200, timestamp: 1672683128.0141916>', 'BatchTimestamp<batch_index: 7300, timestamp: 1672683134.6008234>', 'BatchTimestamp<batch_index: 7400, timestamp: 1672683141.238468>', 'BatchTimestamp<batch_index: 7500, timestamp: 1672683147.767641>', 'BatchTimestamp<batch_index: 7600, timestamp: 1672683154.2132878>', 'BatchTimestamp<batch_index: 7700, timestamp: 1672683160.6591237>', 'BatchTimestamp<batch_index: 7800, timestamp: 1672683167.0949745>', 'BatchTimestamp<batch_index: 7900, timestamp: 1672683173.590529>', 'BatchTimestamp<batch_index: 8000, timestamp: 1672683180.263849>', 'BatchTimestamp<batch_index: 8100, timestamp: 1672683187.6858897>', 'BatchTimestamp<batch_index: 8200, timestamp: 1672683194.1592162>', 'BatchTimestamp<batch_index: 8300, timestamp: 1672683200.6482134>', 'BatchTimestamp<batch_index: 8400, timestamp: 1672683207.1220999>', 'BatchTimestamp<batch_index: 8500, timestamp: 1672683213.5942247>', 'BatchTimestamp<batch_index: 8600, timestamp: 1672683219.9589024>', 'BatchTimestamp<batch_index: 8700, timestamp: 1672683226.447521>', 'BatchTimestamp<batch_index: 8800, timestamp: 1672683232.9614205>', 'BatchTimestamp<batch_index: 8900, timestamp: 1672683239.3062918>', 'BatchTimestamp<batch_index: 9000, timestamp: 1672683246.5079556>', 'BatchTimestamp<batch_index: 9100, timestamp: 1672683252.967906>', 'BatchTimestamp<batch_index: 9200, timestamp: 1672683259.4098737>', 'BatchTimestamp<batch_index: 9300, timestamp: 1672683265.908651>', 'BatchTimestamp<batch_index: 9400, timestamp: 1672683272.4435375>', 'BatchTimestamp<batch_index: 9500, timestamp: 1672683278.8622487>', 'BatchTimestamp<batch_index: 9600, timestamp: 1672683285.3756545>', 'BatchTimestamp<batch_index: 9700, timestamp: 1672683291.8911548>', 'BatchTimestamp<batch_index: 9800, timestamp: 1672683298.3377986>', 'BatchTimestamp<batch_index: 9900, timestamp: 1672683305.731158>', 'BatchTimestamp<batch_index: 10000, timestamp: 1672683312.4220092>', 'BatchTimestamp<batch_index: 10100, timestamp: 1672683318.969848>', 'BatchTimestamp<batch_index: 10200, timestamp: 1672683325.319253>', 'BatchTimestamp<batch_index: 10300, timestamp: 1672683331.7761774>', 'BatchTimestamp<batch_index: 10400, timestamp: 1672683338.235282>', 'BatchTimestamp<batch_index: 10500, timestamp: 1672683344.4689362>', 'BatchTimestamp<batch_index: 10600, timestamp: 1672683351.0236077>', 'BatchTimestamp<batch_index: 10700, timestamp: 1672683357.4769216>', 'BatchTimestamp<batch_index: 10800, timestamp: 1672683364.6381574>', 'BatchTimestamp<batch_index: 10900, timestamp: 1672683371.2695117>', 'BatchTimestamp<batch_index: 11000, timestamp: 1672683377.714102>', 'BatchTimestamp<batch_index: 11100, timestamp: 1672683384.1132727>', 'BatchTimestamp<batch_index: 11200, timestamp: 1672683390.5962389>', 'BatchTimestamp<batch_index: 11300, timestamp: 1672683397.0997345>', 'BatchTimestamp<batch_index: 11400, timestamp: 1672683403.5787616>', 'BatchTimestamp<batch_index: 11500, timestamp: 1672683410.1464055>', 'BatchTimestamp<batch_index: 11600, timestamp: 1672683416.6222105>', 'BatchTimestamp<batch_index: 11700, timestamp: 1672683423.5036933>', 'BatchTimestamp<batch_index: 11800, timestamp: 1672683430.6622257>', 'BatchTimestamp<batch_index: 11900, timestamp: 1672683437.1857696>', 'BatchTimestamp<batch_index: 12000, timestamp: 1672683443.725579>', 'BatchTimestamp<batch_index: 12100, timestamp: 1672683450.138454>', 'BatchTimestamp<batch_index: 12200, timestamp: 1672683456.6049812>', 'BatchTimestamp<batch_index: 12300, timestamp: 1672683462.983954>', 'BatchTimestamp<batch_index: 12400, timestamp: 1672683469.4426947>', 'BatchTimestamp<batch_index: 12500, timestamp: 1672683476.0920718>', 'BatchTimestamp<batch_index: 12600, timestamp: 1672683482.8014095>', 'BatchTimestamp<batch_index: 12700, timestamp: 1672683489.9438639>', 'BatchTimestamp<batch_index: 12800, timestamp: 1672683496.389714>', 'BatchTimestamp<batch_index: 12900, timestamp: 1672683502.8399918>', 'BatchTimestamp<batch_index: 13000, timestamp: 1672683509.275733>', 'BatchTimestamp<batch_index: 13100, timestamp: 1672683515.6839495>', 'BatchTimestamp<batch_index: 13200, timestamp: 1672683522.1916323>', 'BatchTimestamp<batch_index: 13300, timestamp: 1672683528.6539364>', 'BatchTimestamp<batch_index: 13400, timestamp: 1672683535.131692>', 'BatchTimestamp<batch_index: 13500, timestamp: 1672683541.7013464>', 'BatchTimestamp<batch_index: 13600, timestamp: 1672683549.2593946>', 'BatchTimestamp<batch_index: 13700, timestamp: 1672683555.6364625>', 'BatchTimestamp<batch_index: 13800, timestamp: 1672683562.1746972>', 'BatchTimestamp<batch_index: 13900, timestamp: 1672683568.3881233>', 'BatchTimestamp<batch_index: 14000, timestamp: 1672683574.1810024>'], 'train_finish_time': 1672683649.3198175, 'avg_exp_per_second': 968.1981637431871}
