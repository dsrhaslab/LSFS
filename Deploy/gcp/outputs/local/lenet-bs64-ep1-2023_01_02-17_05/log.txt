2023-01-02 17:05:27.521028: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-02 17:05:28.736823: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64:/usr/local/nccl2/lib:/usr/local/cuda/extras/CUPTI/lib64
2023-01-02 17:05:28.736966: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64:/usr/local/nccl2/lib:/usr/local/cuda/extras/CUPTI/lib64
2023-01-02 17:05:28.736985: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2023-01-02 17:05:30.213571: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:05:30.335649: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:05:30.338972: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:05:30.343352: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-02 17:05:30.343872: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:05:30.346531: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:05:30.349134: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:05:31.267449: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:05:31.269601: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:05:31.271514: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2023-01-02 17:05:31.273281: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1613] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 13582 MB memory:  -> device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5
INFO:tensorflow:Using MirroredStrategy with devices ('/job:localhost/replica:0/task:0/device:GPU:0',)
I0102 17:05:31.600776 140040948094784 mirrored_strategy.py:374] Using MirroredStrategy with devices ('/job:localhost/replica:0/task:0/device:GPU:0',)
WARNING:tensorflow:From /opt/conda/lib/python3.7/site-packages/tensorflow/python/autograph/pyct/static_analysis/liveness.py:83: Analyzer.lamba_check (from tensorflow.python.autograph.pyct.static_analysis.liveness) is deprecated and will be removed after 2023-09-23.
Instructions for updating:
Lambda fuctions will be no more assumed to be used in the statement where they are used, or at least in the same block. https://github.com/tensorflow/tensorflow/issues/56089
W0102 17:05:31.652499 140040948094784 deprecation.py:356] From /opt/conda/lib/python3.7/site-packages/tensorflow/python/autograph/pyct/static_analysis/liveness.py:83: Analyzer.lamba_check (from tensorflow.python.autograph.pyct.static_analysis.liveness) is deprecated and will be removed after 2023-09-23.
Instructions for updating:
Lambda fuctions will be no more assumed to be used in the statement where they are used, or at least in the same block. https://github.com/tensorflow/tensorflow/issues/56089
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:05:32.540372 140040948094784 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:05:32.543309 140040948094784 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:05:32.545493 140040948094784 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:05:32.546366 140040948094784 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:05:32.855217 140040948094784 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:05:32.857246 140040948094784 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:05:32.859106 140040948094784 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:05:32.862502 140040948094784 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:05:32.864497 140040948094784 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0102 17:05:34.012770 140040948094784 cross_device_ops.py:618] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
2023-01-02 17:05:41.260860: I tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:428] Loaded cuDNN version 8200
I0102 17:05:52.275485 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':100, 'time_taken': 19.591092,'examples_per_second': 326.679083}
I0102 17:05:58.685346 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':200, 'time_taken': 6.409906,'examples_per_second': 998.454593}
I0102 17:06:05.777218 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':300, 'time_taken': 7.091869,'examples_per_second': 902.441953}
I0102 17:06:12.131196 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':400, 'time_taken': 6.353981,'examples_per_second': 1007.242505}
I0102 17:06:18.588098 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':500, 'time_taken': 6.456896,'examples_per_second': 991.188325}
I0102 17:06:25.048257 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':600, 'time_taken': 6.460162,'examples_per_second': 990.687242}
I0102 17:06:31.408614 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':700, 'time_taken': 6.360357,'examples_per_second': 1006.232894}
I0102 17:06:37.830568 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':800, 'time_taken': 6.421947,'examples_per_second': 996.582574}
I0102 17:06:44.274621 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':900, 'time_taken': 6.444062,'examples_per_second': 993.162315}
I0102 17:06:50.725766 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':1000, 'time_taken': 6.451135,'examples_per_second': 992.073427}
I0102 17:06:57.129218 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':1100, 'time_taken': 6.403464,'examples_per_second': 999.459105}
I0102 17:07:04.077011 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':1200, 'time_taken': 6.947792,'examples_per_second': 921.156015}
I0102 17:07:10.655724 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':1300, 'time_taken': 6.578712,'examples_per_second': 972.834877}
I0102 17:07:17.028943 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':1400, 'time_taken': 6.373222,'examples_per_second': 1004.201587}
I0102 17:07:23.237105 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':1500, 'time_taken': 6.208134,'examples_per_second': 1030.905554}
I0102 17:07:29.681185 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':1600, 'time_taken': 6.444105,'examples_per_second': 993.155811}
I0102 17:07:36.068300 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':1700, 'time_taken': 6.387116,'examples_per_second': 1002.017118}
I0102 17:07:42.413818 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':1800, 'time_taken': 6.345490,'examples_per_second': 1008.590357}
I0102 17:07:48.763092 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':1900, 'time_taken': 6.349301,'examples_per_second': 1007.985033}
I0102 17:07:55.217023 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':2000, 'time_taken': 6.453931,'examples_per_second': 991.643720}
I0102 17:08:01.506250 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':2100, 'time_taken': 6.289228,'examples_per_second': 1017.612940}
I0102 17:08:08.437406 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':2200, 'time_taken': 6.931158,'examples_per_second': 923.366684}
I0102 17:08:14.775821 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':2300, 'time_taken': 6.338409,'examples_per_second': 1009.717154}
I0102 17:08:21.040860 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':2400, 'time_taken': 6.265043,'examples_per_second': 1021.541308}
I0102 17:08:27.506839 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':2500, 'time_taken': 6.465978,'examples_per_second': 989.796071}
I0102 17:08:33.937404 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':2600, 'time_taken': 6.430564,'examples_per_second': 995.247085}
I0102 17:08:40.402270 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':2700, 'time_taken': 6.464866,'examples_per_second': 989.966430}
I0102 17:08:46.859966 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':2800, 'time_taken': 6.457696,'examples_per_second': 991.065514}
I0102 17:08:53.456455 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':2900, 'time_taken': 6.596489,'examples_per_second': 970.213101}
I0102 17:09:00.101558 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':3000, 'time_taken': 6.645106,'examples_per_second': 963.114868}
I0102 17:09:07.454445 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':3100, 'time_taken': 7.352883,'examples_per_second': 870.406875}
I0102 17:09:13.879785 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':3200, 'time_taken': 6.425340,'examples_per_second': 996.056250}
I0102 17:09:20.299721 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':3300, 'time_taken': 6.419940,'examples_per_second': 996.894016}
I0102 17:09:26.789579 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':3400, 'time_taken': 6.489856,'examples_per_second': 986.154392}
I0102 17:09:33.155709 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':3500, 'time_taken': 6.366129,'examples_per_second': 1005.320552}
I0102 17:09:39.468183 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':3600, 'time_taken': 6.312475,'examples_per_second': 1013.865369}
I0102 17:09:45.731168 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':3700, 'time_taken': 6.262983,'examples_per_second': 1021.877261}
I0102 17:09:52.076863 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':3800, 'time_taken': 6.345705,'examples_per_second': 1008.556252}
I0102 17:09:58.546523 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':3900, 'time_taken': 6.469650,'examples_per_second': 989.234307}
I0102 17:10:05.664095 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':4000, 'time_taken': 7.117559,'examples_per_second': 899.184654}
I0102 17:10:12.082151 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':4100, 'time_taken': 6.418073,'examples_per_second': 997.184055}
I0102 17:10:18.449974 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':4200, 'time_taken': 6.367821,'examples_per_second': 1005.053456}
I0102 17:10:24.916394 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':4300, 'time_taken': 6.466410,'examples_per_second': 989.730053}
I0102 17:10:31.255232 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':4400, 'time_taken': 6.338852,'examples_per_second': 1009.646477}
I0102 17:10:37.680154 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':4500, 'time_taken': 6.424921,'examples_per_second': 996.121192}
I0102 17:10:44.285336 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':4600, 'time_taken': 6.605182,'examples_per_second': 968.936183}
I0102 17:10:50.642295 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':4700, 'time_taken': 6.356960,'examples_per_second': 1006.770560}
I0102 17:10:56.872222 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':4800, 'time_taken': 6.229925,'examples_per_second': 1027.299622}
I0102 17:11:03.485808 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':4900, 'time_taken': 6.613583,'examples_per_second': 967.705355}
I0102 17:11:10.319340 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':5000, 'time_taken': 6.833532,'examples_per_second': 936.558189}
I0102 17:11:16.742491 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':5100, 'time_taken': 6.423155,'examples_per_second': 996.395137}
I0102 17:11:23.070426 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':5200, 'time_taken': 6.327936,'examples_per_second': 1011.388242}
I0102 17:11:29.447004 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':5300, 'time_taken': 6.376575,'examples_per_second': 1003.673678}
I0102 17:11:35.803211 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':5400, 'time_taken': 6.356208,'examples_per_second': 1006.889704}
I0102 17:11:42.189500 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':5500, 'time_taken': 6.386291,'examples_per_second': 1002.146700}
I0102 17:11:48.553042 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':5600, 'time_taken': 6.363541,'examples_per_second': 1005.729413}
I0102 17:11:54.907765 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':5700, 'time_taken': 6.354722,'examples_per_second': 1007.125092}
I0102 17:12:01.248658 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':5800, 'time_taken': 6.340893,'examples_per_second': 1009.321553}
I0102 17:12:08.430162 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':5900, 'time_taken': 7.181487,'examples_per_second': 891.180356}
I0102 17:12:14.647997 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':6000, 'time_taken': 6.217856,'examples_per_second': 1029.293750}
I0102 17:12:20.987135 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':6100, 'time_taken': 6.339126,'examples_per_second': 1009.602922}
I0102 17:12:27.333304 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':6200, 'time_taken': 6.346178,'examples_per_second': 1008.480964}
I0102 17:12:33.618421 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':6300, 'time_taken': 6.285119,'examples_per_second': 1018.278283}
I0102 17:12:39.973081 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':6400, 'time_taken': 6.354660,'examples_per_second': 1007.134954}
I0102 17:12:46.283919 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':6500, 'time_taken': 6.310828,'examples_per_second': 1014.130043}
I0102 17:12:52.717425 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':6600, 'time_taken': 6.433517,'examples_per_second': 994.790219}
I0102 17:12:59.076280 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':6700, 'time_taken': 6.358855,'examples_per_second': 1006.470579}
I0102 17:13:06.183685 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':6800, 'time_taken': 7.107390,'examples_per_second': 900.471179}
I0102 17:13:12.559582 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':6900, 'time_taken': 6.375912,'examples_per_second': 1003.777902}
I0102 17:13:18.887196 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':7000, 'time_taken': 6.327614,'examples_per_second': 1011.439688}
I0102 17:13:25.271803 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':7100, 'time_taken': 6.384598,'examples_per_second': 1002.412291}
I0102 17:13:31.467880 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':7200, 'time_taken': 6.196080,'examples_per_second': 1032.911096}
I0102 17:13:37.799264 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':7300, 'time_taken': 6.331365,'examples_per_second': 1010.840533}
I0102 17:13:44.156013 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':7400, 'time_taken': 6.356773,'examples_per_second': 1006.800127}
I0102 17:13:50.574217 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':7500, 'time_taken': 6.418201,'examples_per_second': 997.164089}
I0102 17:13:56.939799 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':7600, 'time_taken': 6.365582,'examples_per_second': 1005.406816}
I0102 17:14:03.964167 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':7700, 'time_taken': 7.024363,'examples_per_second': 911.114670}
I0102 17:14:10.553795 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':7800, 'time_taken': 6.589636,'examples_per_second': 971.222035}
I0102 17:14:16.888547 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':7900, 'time_taken': 6.334748,'examples_per_second': 1010.300604}
I0102 17:14:23.209282 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':8000, 'time_taken': 6.320736,'examples_per_second': 1012.540323}
I0102 17:14:29.594087 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':8100, 'time_taken': 6.384800,'examples_per_second': 1002.380698}
I0102 17:14:35.992487 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':8200, 'time_taken': 6.398378,'examples_per_second': 1000.253555}
I0102 17:14:42.338329 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':8300, 'time_taken': 6.345872,'examples_per_second': 1008.529576}
I0102 17:14:48.706045 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':8400, 'time_taken': 6.367715,'examples_per_second': 1005.070051}
I0102 17:14:55.128975 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':8500, 'time_taken': 6.422930,'examples_per_second': 996.429978}
I0102 17:15:01.426098 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':8600, 'time_taken': 6.297101,'examples_per_second': 1016.340614}
I0102 17:15:08.490806 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':8700, 'time_taken': 7.064721,'examples_per_second': 905.909757}
I0102 17:15:14.848875 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':8800, 'time_taken': 6.358075,'examples_per_second': 1006.593917}
I0102 17:15:21.291652 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':8900, 'time_taken': 6.442778,'examples_per_second': 993.360264}
I0102 17:15:27.583098 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':9000, 'time_taken': 6.291444,'examples_per_second': 1017.254496}
I0102 17:15:34.004829 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':9100, 'time_taken': 6.421729,'examples_per_second': 996.616392}
I0102 17:15:40.334523 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':9200, 'time_taken': 6.329672,'examples_per_second': 1011.110791}
I0102 17:15:46.813159 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':9300, 'time_taken': 6.478655,'examples_per_second': 987.859311}
I0102 17:15:53.075188 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':9400, 'time_taken': 6.262033,'examples_per_second': 1022.032343}
I0102 17:15:59.615652 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':9500, 'time_taken': 6.540466,'examples_per_second': 978.523574}
I0102 17:16:06.890655 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':9600, 'time_taken': 7.274989,'examples_per_second': 879.726401}
I0102 17:16:13.281557 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':9700, 'time_taken': 6.390912,'examples_per_second': 1001.422048}
I0102 17:16:19.637068 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':9800, 'time_taken': 6.355516,'examples_per_second': 1006.999281}
I0102 17:16:26.045762 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':9900, 'time_taken': 6.408691,'examples_per_second': 998.643810}
I0102 17:16:32.297667 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':10000, 'time_taken': 6.251908,'examples_per_second': 1023.687556}
I0102 17:16:38.607949 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':10100, 'time_taken': 6.310283,'examples_per_second': 1014.217634}
I0102 17:16:44.909901 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':10200, 'time_taken': 6.301953,'examples_per_second': 1015.558219}
I0102 17:16:51.236131 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':10300, 'time_taken': 6.326230,'examples_per_second': 1011.660966}
I0102 17:16:57.543131 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':10400, 'time_taken': 6.306995,'examples_per_second': 1014.746262}
I0102 17:17:04.579472 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':10500, 'time_taken': 7.036347,'examples_per_second': 909.562885}
I0102 17:17:11.031766 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':10600, 'time_taken': 6.452283,'examples_per_second': 991.897028}
I0102 17:17:17.300203 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':10700, 'time_taken': 6.268447,'examples_per_second': 1020.986550}
I0102 17:17:23.696004 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':10800, 'time_taken': 6.395782,'examples_per_second': 1000.659461}
I0102 17:17:30.059956 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':10900, 'time_taken': 6.363963,'examples_per_second': 1005.662646}
I0102 17:17:36.423440 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':11000, 'time_taken': 6.363490,'examples_per_second': 1005.737363}
I0102 17:17:42.674255 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':11100, 'time_taken': 6.250815,'examples_per_second': 1023.866541}
I0102 17:17:49.030975 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':11200, 'time_taken': 6.356706,'examples_per_second': 1006.810775}
I0102 17:17:55.422649 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':11300, 'time_taken': 6.391663,'examples_per_second': 1001.304344}
I0102 17:18:02.138408 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':11400, 'time_taken': 6.715785,'examples_per_second': 952.978721}
I0102 17:18:09.290199 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':11500, 'time_taken': 7.151790,'examples_per_second': 894.880844}
I0102 17:18:15.690833 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':11600, 'time_taken': 6.400633,'examples_per_second': 999.901163}
I0102 17:18:22.051341 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':11700, 'time_taken': 6.360510,'examples_per_second': 1006.208642}
I0102 17:18:28.442807 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':11800, 'time_taken': 6.391439,'examples_per_second': 1001.339379}
I0102 17:18:34.803751 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':11900, 'time_taken': 6.360969,'examples_per_second': 1006.136004}
I0102 17:18:41.160508 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':12000, 'time_taken': 6.356758,'examples_per_second': 1006.802468}
I0102 17:18:47.363254 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':12100, 'time_taken': 6.202735,'examples_per_second': 1031.802836}
I0102 17:18:53.772140 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':12200, 'time_taken': 6.408888,'examples_per_second': 998.613160}
I0102 17:19:00.079533 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':12300, 'time_taken': 6.307399,'examples_per_second': 1014.681285}
I0102 17:19:07.241446 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':12400, 'time_taken': 7.161915,'examples_per_second': 893.615795}
I0102 17:19:13.606729 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':12500, 'time_taken': 6.365282,'examples_per_second': 1005.454228}
I0102 17:19:20.029476 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':12600, 'time_taken': 6.422738,'examples_per_second': 996.459754}
I0102 17:19:26.486354 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':12700, 'time_taken': 6.456888,'examples_per_second': 991.189533}
I0102 17:19:32.906768 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':12800, 'time_taken': 6.420413,'examples_per_second': 996.820681}
I0102 17:19:39.237017 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':12900, 'time_taken': 6.330248,'examples_per_second': 1011.018785}
I0102 17:19:45.603640 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':13000, 'time_taken': 6.366598,'examples_per_second': 1005.246424}
I0102 17:19:51.945547 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':13100, 'time_taken': 6.341933,'examples_per_second': 1009.156039}
I0102 17:19:58.210012 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':13200, 'time_taken': 6.264466,'examples_per_second': 1021.635317}
I0102 17:20:05.305689 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':13300, 'time_taken': 7.095677,'examples_per_second': 901.957581}
I0102 17:20:11.530664 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':13400, 'time_taken': 6.224974,'examples_per_second': 1028.116718}
I0102 17:20:17.931190 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':13500, 'time_taken': 6.400526,'examples_per_second': 999.917812}
I0102 17:20:24.219916 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':13600, 'time_taken': 6.288725,'examples_per_second': 1017.694305}
I0102 17:20:30.600594 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':13700, 'time_taken': 6.380673,'examples_per_second': 1003.028927}
I0102 17:20:36.969652 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':13800, 'time_taken': 6.369059,'examples_per_second': 1004.858042}
I0102 17:20:43.353260 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':13900, 'time_taken': 6.383617,'examples_per_second': 1002.566388}
I0102 17:20:49.067699 140040948094784 keras_utils.py:88] BenchmarkMetric: {'global step':14000, 'time_taken': 5.714433,'examples_per_second': 1119.971142}
14012/14012 - 991s - loss: 6.7195 - sparse_categorical_accuracy: 0.0061 - val_loss: 6.5267 - val_sparse_categorical_accuracy: 0.0119
I0102 17:22:03.682204 140040948094784 keras_utils.py:96] BenchmarkMetric: {'epoch':0, 'time_taken': 991.000384}
781/781 - 68s - loss: 6.5267 - sparse_categorical_accuracy: 0.0119
I0102 17:23:11.864376 140040948094784 lenet_imagenet_main.py:269] Run stats:
{'accuracy_top_1': 0.011923816055059433, 'eval_loss': 6.526714324951172, 'loss': 6.719493389129639, 'training_accuracy_top_1': 0.006061768624931574, 'step_timestamp_log': ['BatchTimestamp<batch_index: 1, timestamp: 1672679132.6842923>', 'BatchTimestamp<batch_index: 100, timestamp: 1672679152.2753844>', 'BatchTimestamp<batch_index: 200, timestamp: 1672679158.6852903>', 'BatchTimestamp<batch_index: 300, timestamp: 1672679165.7771592>', 'BatchTimestamp<batch_index: 400, timestamp: 1672679172.1311405>', 'BatchTimestamp<batch_index: 500, timestamp: 1672679178.5880365>', 'BatchTimestamp<batch_index: 600, timestamp: 1672679185.0481985>', 'BatchTimestamp<batch_index: 700, timestamp: 1672679191.408555>', 'BatchTimestamp<batch_index: 800, timestamp: 1672679197.8305016>', 'BatchTimestamp<batch_index: 900, timestamp: 1672679204.274564>', 'BatchTimestamp<batch_index: 1000, timestamp: 1672679210.7256994>', 'BatchTimestamp<batch_index: 1100, timestamp: 1672679217.129163>', 'BatchTimestamp<batch_index: 1200, timestamp: 1672679224.0769546>', 'BatchTimestamp<batch_index: 1300, timestamp: 1672679230.655666>', 'BatchTimestamp<batch_index: 1400, timestamp: 1672679237.0288885>', 'BatchTimestamp<batch_index: 1500, timestamp: 1672679243.2370226>', 'BatchTimestamp<batch_index: 1600, timestamp: 1672679249.6811273>', 'BatchTimestamp<batch_index: 1700, timestamp: 1672679256.0682437>', 'BatchTimestamp<batch_index: 1800, timestamp: 1672679262.4137337>', 'BatchTimestamp<batch_index: 1900, timestamp: 1672679268.7630343>', 'BatchTimestamp<batch_index: 2000, timestamp: 1672679275.2169652>', 'BatchTimestamp<batch_index: 2100, timestamp: 1672679281.5061934>', 'BatchTimestamp<batch_index: 2200, timestamp: 1672679288.437351>', 'BatchTimestamp<batch_index: 2300, timestamp: 1672679294.7757597>', 'BatchTimestamp<batch_index: 2400, timestamp: 1672679301.0408025>', 'BatchTimestamp<batch_index: 2500, timestamp: 1672679307.5067809>', 'BatchTimestamp<batch_index: 2600, timestamp: 1672679313.9373448>', 'BatchTimestamp<batch_index: 2700, timestamp: 1672679320.4022105>', 'BatchTimestamp<batch_index: 2800, timestamp: 1672679326.8599067>', 'BatchTimestamp<batch_index: 2900, timestamp: 1672679333.4563956>', 'BatchTimestamp<batch_index: 3000, timestamp: 1672679340.1015012>', 'BatchTimestamp<batch_index: 3100, timestamp: 1672679347.4543843>', 'BatchTimestamp<batch_index: 3200, timestamp: 1672679353.8797243>', 'BatchTimestamp<batch_index: 3300, timestamp: 1672679360.2996645>', 'BatchTimestamp<batch_index: 3400, timestamp: 1672679366.7895205>', 'BatchTimestamp<batch_index: 3500, timestamp: 1672679373.1556492>', 'BatchTimestamp<batch_index: 3600, timestamp: 1672679379.4681244>', 'BatchTimestamp<batch_index: 3700, timestamp: 1672679385.7311075>', 'BatchTimestamp<batch_index: 3800, timestamp: 1672679392.076812>', 'BatchTimestamp<batch_index: 3900, timestamp: 1672679398.5464623>', 'BatchTimestamp<batch_index: 4000, timestamp: 1672679405.6640215>', 'BatchTimestamp<batch_index: 4100, timestamp: 1672679412.0820944>', 'BatchTimestamp<batch_index: 4200, timestamp: 1672679418.449915>', 'BatchTimestamp<batch_index: 4300, timestamp: 1672679424.9163246>', 'BatchTimestamp<batch_index: 4400, timestamp: 1672679431.255177>', 'BatchTimestamp<batch_index: 4500, timestamp: 1672679437.680098>', 'BatchTimestamp<batch_index: 4600, timestamp: 1672679444.2852802>', 'BatchTimestamp<batch_index: 4700, timestamp: 1672679450.64224>', 'BatchTimestamp<batch_index: 4800, timestamp: 1672679456.8721654>', 'BatchTimestamp<batch_index: 4900, timestamp: 1672679463.4857488>', 'BatchTimestamp<batch_index: 5000, timestamp: 1672679470.3192804>', 'BatchTimestamp<batch_index: 5100, timestamp: 1672679476.742435>', 'BatchTimestamp<batch_index: 5200, timestamp: 1672679483.070371>', 'BatchTimestamp<batch_index: 5300, timestamp: 1672679489.4469454>', 'BatchTimestamp<batch_index: 5400, timestamp: 1672679495.803153>', 'BatchTimestamp<batch_index: 5500, timestamp: 1672679502.1894436>', 'BatchTimestamp<batch_index: 5600, timestamp: 1672679508.5529842>', 'BatchTimestamp<batch_index: 5700, timestamp: 1672679514.9077063>', 'BatchTimestamp<batch_index: 5800, timestamp: 1672679521.2485993>', 'BatchTimestamp<batch_index: 5900, timestamp: 1672679528.4300861>', 'BatchTimestamp<batch_index: 6000, timestamp: 1672679534.6479418>', 'BatchTimestamp<batch_index: 6100, timestamp: 1672679540.9870677>', 'BatchTimestamp<batch_index: 6200, timestamp: 1672679547.333246>', 'BatchTimestamp<batch_index: 6300, timestamp: 1672679553.6183648>', 'BatchTimestamp<batch_index: 6400, timestamp: 1672679559.9730246>', 'BatchTimestamp<batch_index: 6500, timestamp: 1672679566.2838523>', 'BatchTimestamp<batch_index: 6600, timestamp: 1672679572.7173696>', 'BatchTimestamp<batch_index: 6700, timestamp: 1672679579.076224>', 'BatchTimestamp<batch_index: 6800, timestamp: 1672679586.1836143>', 'BatchTimestamp<batch_index: 6900, timestamp: 1672679592.5595267>', 'BatchTimestamp<batch_index: 7000, timestamp: 1672679598.8871408>', 'BatchTimestamp<batch_index: 7100, timestamp: 1672679605.2717392>', 'BatchTimestamp<batch_index: 7200, timestamp: 1672679611.4678195>', 'BatchTimestamp<batch_index: 7300, timestamp: 1672679617.799184>', 'BatchTimestamp<batch_index: 7400, timestamp: 1672679624.1559572>', 'BatchTimestamp<batch_index: 7500, timestamp: 1672679630.5741587>', 'BatchTimestamp<batch_index: 7600, timestamp: 1672679636.9397411>', 'BatchTimestamp<batch_index: 7700, timestamp: 1672679643.964104>', 'BatchTimestamp<batch_index: 7800, timestamp: 1672679650.5537403>', 'BatchTimestamp<batch_index: 7900, timestamp: 1672679656.8884885>', 'BatchTimestamp<batch_index: 8000, timestamp: 1672679663.2092245>', 'BatchTimestamp<batch_index: 8100, timestamp: 1672679669.5940242>', 'BatchTimestamp<batch_index: 8200, timestamp: 1672679675.9924018>', 'BatchTimestamp<batch_index: 8300, timestamp: 1672679682.3382742>', 'BatchTimestamp<batch_index: 8400, timestamp: 1672679688.7059896>', 'BatchTimestamp<batch_index: 8500, timestamp: 1672679695.1289196>', 'BatchTimestamp<batch_index: 8600, timestamp: 1672679701.426021>', 'BatchTimestamp<batch_index: 8700, timestamp: 1672679708.4907424>', 'BatchTimestamp<batch_index: 8800, timestamp: 1672679714.8488178>', 'BatchTimestamp<batch_index: 8900, timestamp: 1672679721.2915962>', 'BatchTimestamp<batch_index: 9000, timestamp: 1672679727.5830405>', 'BatchTimestamp<batch_index: 9100, timestamp: 1672679734.004769>', 'BatchTimestamp<batch_index: 9200, timestamp: 1672679740.3344414>', 'BatchTimestamp<batch_index: 9300, timestamp: 1672679746.8130968>', 'BatchTimestamp<batch_index: 9400, timestamp: 1672679753.0751295>', 'BatchTimestamp<batch_index: 9500, timestamp: 1672679759.6155953>', 'BatchTimestamp<batch_index: 9600, timestamp: 1672679766.8905845>', 'BatchTimestamp<batch_index: 9700, timestamp: 1672679773.2814963>', 'BatchTimestamp<batch_index: 9800, timestamp: 1672679779.6370122>', 'BatchTimestamp<batch_index: 9900, timestamp: 1672679786.0457036>', 'BatchTimestamp<batch_index: 10000, timestamp: 1672679792.2976112>', 'BatchTimestamp<batch_index: 10100, timestamp: 1672679798.607894>', 'BatchTimestamp<batch_index: 10200, timestamp: 1672679804.9098468>', 'BatchTimestamp<batch_index: 10300, timestamp: 1672679811.2360768>', 'BatchTimestamp<batch_index: 10400, timestamp: 1672679817.5430722>', 'BatchTimestamp<batch_index: 10500, timestamp: 1672679824.5794191>', 'BatchTimestamp<batch_index: 10600, timestamp: 1672679831.0317018>', 'BatchTimestamp<batch_index: 10700, timestamp: 1672679837.3001487>', 'BatchTimestamp<batch_index: 10800, timestamp: 1672679843.695931>', 'BatchTimestamp<batch_index: 10900, timestamp: 1672679850.059894>', 'BatchTimestamp<batch_index: 11000, timestamp: 1672679856.4233844>', 'BatchTimestamp<batch_index: 11100, timestamp: 1672679862.674199>', 'BatchTimestamp<batch_index: 11200, timestamp: 1672679869.030905>', 'BatchTimestamp<batch_index: 11300, timestamp: 1672679875.422568>', 'BatchTimestamp<batch_index: 11400, timestamp: 1672679882.1383529>', 'BatchTimestamp<batch_index: 11500, timestamp: 1672679889.290143>', 'BatchTimestamp<batch_index: 11600, timestamp: 1672679895.6907756>', 'BatchTimestamp<batch_index: 11700, timestamp: 1672679902.0512855>', 'BatchTimestamp<batch_index: 11800, timestamp: 1672679908.442725>', 'BatchTimestamp<batch_index: 11900, timestamp: 1672679914.803694>', 'BatchTimestamp<batch_index: 12000, timestamp: 1672679921.1604524>', 'BatchTimestamp<batch_index: 12100, timestamp: 1672679927.3631878>', 'BatchTimestamp<batch_index: 12200, timestamp: 1672679933.772076>', 'BatchTimestamp<batch_index: 12300, timestamp: 1672679940.0794752>', 'BatchTimestamp<batch_index: 12400, timestamp: 1672679947.2413898>', 'BatchTimestamp<batch_index: 12500, timestamp: 1672679953.606672>', 'BatchTimestamp<batch_index: 12600, timestamp: 1672679960.0294101>', 'BatchTimestamp<batch_index: 12700, timestamp: 1672679966.4862983>', 'BatchTimestamp<batch_index: 12800, timestamp: 1672679972.9067109>', 'BatchTimestamp<batch_index: 12900, timestamp: 1672679979.2369592>', 'BatchTimestamp<batch_index: 13000, timestamp: 1672679985.6035573>', 'BatchTimestamp<batch_index: 13100, timestamp: 1672679991.9454904>', 'BatchTimestamp<batch_index: 13200, timestamp: 1672679998.2099566>', 'BatchTimestamp<batch_index: 13300, timestamp: 1672680005.305634>', 'BatchTimestamp<batch_index: 13400, timestamp: 1672680011.5306082>', 'BatchTimestamp<batch_index: 13500, timestamp: 1672680017.9311342>', 'BatchTimestamp<batch_index: 13600, timestamp: 1672680024.2198596>', 'BatchTimestamp<batch_index: 13700, timestamp: 1672680030.600533>', 'BatchTimestamp<batch_index: 13800, timestamp: 1672680036.9695919>', 'BatchTimestamp<batch_index: 13900, timestamp: 1672680043.353209>', 'BatchTimestamp<batch_index: 14000, timestamp: 1672680049.067642>'], 'train_finish_time': 1672680123.6831021, 'avg_exp_per_second': 977.7567437637459}
