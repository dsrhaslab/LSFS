---

- name: Stop monitoring on all nodes
  gather_facts: no
  hosts: [client, peer, bootstrapper, master]
  tasks:
    - name: Get running processes list from remote host
      ignore_errors: yes
      shell: pgrep -f "dstat|iostat |nvidia-smi"
      register: running_processes

    - name: Kill running processes
      ignore_errors: yes
      shell: "kill {{ item }}"
      with_items: "{{ running_processes.stdout_lines }}"

    - wait_for:
        path: "/proc/{{ item }}/status"
        state: absent
      with_items: "{{ running_processes.stdout_lines }}"
      ignore_errors: yes
      register: crunchify_processes

    - name: Force kill stuck processes
      ignore_errors: yes
      shell: "kill -9 {{ item }}"
      with_items: "{{ crunchify_processes.results | select('failed') | map(attribute='item') | list }}"

    - name: Get hostname
      shell: hostname
      register: machine_hostname
      
    - name: Compress log directory
      archive:
        path: "/home/{{ ansible_user }}/logs/{{ run_name }}"
        dest: "/home/{{ ansible_user }}/logs/{{ machine_hostname.stdout }}.zip"
        format: zip

#    - name: Ensure Google cloud storage dependencies are met
#      include: dependencies.yml

    - name: Upload to bucket
      gc_storage:
        bucket: "lsfs_bucket"
        object: "/logs/{{ folder_name }}/{{ run_name }}/{{ try_nr }}/{{ machine_hostname.stdout }}.zip"
        src: "/home/{{ ansible_user }}/logs/{{ machine_hostname.stdout }}.zip"
        mode: put
        gs_access_key: GOOGG44PCMOLPIORPWXFILV2
        gs_secret_key: F8sh0E3Hq7gV8QlxWQ0dKonc/1LCW6qpljbCH++T
      ignore_errors: yes
        
    - name: remove monitoring files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "/home/{{ ansible_user }}/logs/{{ machine_hostname.stdout }}.zip"
        - "/home/{{ ansible_user }}/logs/{{ run_name }}"      
