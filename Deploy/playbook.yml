---

- name: Setup Network
  hosts: localhost
  connection: local
  gather_facts: no
  roles:
    - role: gcp-network
      vars:
        gcp_network_name: lsfs-network
        gcp_subnet_name: subnet-us-east-192
        gcp_subnet_range: 192.168.0.0/16
        gcp_router_name: nat-router
        gcp_region: us-east1
        gcp_project: lsfs-283710
        gcp_cred_kind: serviceaccount
        gcp_cred_file: credentials.json

- name: Creating Test Runner Instance
  hosts: localhost
  connection: local
  gather_facts: no
  roles:
    - role: gcp
      vars:
        gcp_network_name: lsfs-network
        gcp_subnet_name: subnet-us-east-192
        gcp_zone: us-east1-d
        gcp_region: us-east1
        gcp_project: lsfs-283710
        gcp_cred_kind: serviceaccount
        gcp_cred_file: credentials.json
        gcp_account_email: 'lsfs-deploy@lsfs-283710.iam.gserviceaccount.com'
        gcp_account_scope: 'https://www.googleapis.com/auth/cloud-platform'
        source_image: projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20200414
        nr_of_machines: 1
        boot_disk_type: "{{ test_runner_boot_disk_type }}"
        boot_disk_size: "{{ test_runner_boot_disk_size }}"
        gcp_machine_type: "{{ test_runner_machine_type }}"
        type_of_component: "{{ test_runner_lsfs_component }}"
        tags: [test-runner]

- name: Store known hosts of 'all' the hosts in the inventory file
  hosts: localhost
  connection: local

  vars:
    ssh_known_hosts_command: "ssh-keyscan -T 10"
    ssh_known_hosts_file: "{{ lookup('env','HOME') + '/.ssh/known_hosts' }}"
    ssh_known_hosts: "{{ groups['all'] }}"

  tasks:

  - name: For each host, remove entry on known_hosts
    shell: "ssh-keygen -R {{ item }}"
    with_items: "{{ ssh_known_hosts }}"
    ignore_errors: yes

  - name: For each host, scan for its ssh public key
    shell: "ssh-keyscan -t rsa {{ item }}"
    with_items: "{{ ssh_known_hosts }}"
    register: ssh_known_host_results
    ignore_errors: yes

  - name: Add/update the public key in the '{{ ssh_known_hosts_file }}'
    known_hosts:
      name: "{{ item.item }}"
      key: "{{ item.stdout }}"
      path: "{{ ssh_known_hosts_file }}"
    with_items: "{{ ssh_known_host_results.results }}"

- name: Setup instances users
  hosts: [test-runner]
  become: yes
  roles:
    - { role: users, payload: users.yml }

- name: Configure Test Runner Machine
  hosts: [test-runner]
  become: no
  roles:
    - role: test-runner

- name: Create Machines in Google Cloud
  hosts: [test-runner]
  become: no
  tasks:
  - name: Copy network configuration to test instance
    copy:
      src: all.yml
      dest: "{{ item }}/all.yml"
    with_items:
      - "/home/{{ ansible_user }}/Deploy/cluster-deploy/group_vars"
      - "/home/{{ ansible_user }}/Deploy/group_vars"

  - name: Copy ssh key to remote server
    copy:
      src: id_rsa.pub
      dest: "/home/{{ ansible_user }}/.ssh/id_rsa.pub"
  - name: Copy ssh key to remote server
    copy:
      src: id_rsa
      dest: "/home/{{ ansible_user }}/.ssh/id_rsa"
      mode: '0600'
  - name: Machine Creation on Background
    shell:
      cmd: "/usr/bin/python3 0_machine-creation.py --nr_nodes {{ nr_of_peers }} >/tmp/machine-creation.txt 2>&1 &"
      chdir: "/home/{{ ansible_user }}/Deploy"
    async: 2592000               # 60*60*24*30 – 1 month
    poll: 0
  # - name: Machine Creation on Background
  #   shell:
  #     cmd: "/usr/local/bin/ansible-playbook cluster-deploy/setup-machines.yml >/tmp/machine-creation.txt 2>&1 &"
  #     chdir: "/home/{{ ansible_user }}/Deploy"
  #   async: 2592000               # 60*60*24*30 – 1 month
  #   poll: 0

- name: Saving In-Memory Inventory to File
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - template:
        src: ansible-hosts.j2
        dest: ansible_hosts

